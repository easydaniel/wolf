{"version":3,"sources":["logo.svg","Footer.js","PlayerTable.js","DarkPlayerTable.js","RoleTable.js","AddRole.js","drag/ItemTypes.js","drag/Card.js","drag/Container.js","EditTemplateRole.js","Admin.js","EnabledTemplateInfo.js","God.js","Player.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","footer","backgroundColor","palette","background","paper","padding","spacing","useStyles","margin","table","minWidth","title","flexGrow","menuButton","marginRight","SET_DIE_STATUS","gql","SET_CHIEF_ID","SET_VOTE_WEIGHTED_ID","RESET_CHIEF_CANDIDATE","PlayerTable","props","classes","useMutation","setDie","setChiefId","setVoteWeightedId","resetChiefCandidate","TableContainer","component","Paper","Table","className","aria-label","size","TableHead","TableRow","TableCell","align","TableBody","data","map","row","key","id","chiefId","chiefVoteState","isCandidate","isDropedOut","Checkbox","onChange","e","variables","checked","color","inputProps","type","onClick","isDie","voteWeightedId","scope","name","roleName","votedNumber","chiefVote","toString","vote","style","isEmpty","isVoteFinish","transition","fontSize","SET_DARK_DIE_STATUS","useState","Set","idSet","setIdSet","Box","display","Button","variant","targets","disabled","newSet","has","delete","add","BaseTable","total","result","forEach","d","number","push","processData","Fragment","players","v","idx","marginLeft","RoleTable","GET_ROLES","AddRole","React","roleId","setRoleId","roleNumber","setRoleNumber","useQuery","loading","error","console","log","justifyContent","Autocomplete","options","roles","filter","getOptionLabel","option","width","event","newValue","renderInput","params","TextField","label","value","target","marginTop","Fab","updateRoleNumber","parseInt","border","marginBottom","cursor","Card","text","index","moveCard","ref","useRef","useDrop","accept","ItemTypes","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","Container","cards","setCards","useCallback","dragCard","newCards","update","$splice","onUpdate","card","i","renderCard","GET_TEMPLATE","UPDATE_ROLE_NUMBER","UPDATE_RULE","UPDATE_ROLE_PRIORITY","TabPanel","children","other","role","hidden","aria-labelledby","p","convertToDragData","EditDarkPriority","priorityList","setPrioritylist","orgPriorityList","setOrgPriorityList","useLazyQuery","fetchPolicy","geTemplate","called","onCompleted","updateRolePriority","useEffect","idData","template","dragData","DndProvider","backend","Backend","IconButton","ids","EditRole","Typography","gutterBottom","EditRuleCore","setValue","updateRule","description","multiline","rows","fullWidth","EditRule","refetch","EditTemplate","square","Tabs","indicatorColor","textColor","Tab","ADD_TEMPLATE","DELETE_TEMPLATE","ENABLE_TEMPLATE","TemplateControl","onSelect","isEnabled","onEdit","onDelete","TemplateTable","addTemplate","deleteTemplate","setName","enableTemplate","maxWidth","templates","setEditName","Admin","editName","tData","EnabledTemplate","enabledTemplate","UPDATE_PLAYER_NAME","GENERATE_TEMPLATE_ROLE","GENERATE_TEMPLATE_PLAYER","REMOVE_ALL_PLAYER","VOTE_START","VOTE_CHIEF_START","parseData","playerGroup","r","TemplateRoleTable","VoteAction","targetList","setTargetList","hasChief","hasVoteTarget","onClose","voteStart","isLock","hasTarget","DialogContent","DialogContentText","isTarget","player","Radio","includes","length","DialogActions","Game","generateRole","generatePlayer","removeAllPlayer","isOpen","setIsOpen","useDebounce","updatePlayerName","isCovertWolfToHuman","state","setState","isPlayerMode","isDark","Dialog","open","DialogTitle","fontWeight","FormControlLabel","control","God","history","useHistory","getRole","isMounted","interval","setInterval","clearInterval","graphQLErrors","extensions","code","gameInfo","setDarkMode","pass","elevation","submit","container","paddingTop","paddingBottom","GET_PLAYER_INFO","SUBMIT_VOTE","SUBMIT_CHIEF_CANDIDATE","SET_IS_VOTER","DROP_OUT_CHIEF_CANDIDATE","GET_ENABLED_TEMPLATE","src","span","Audio","setTarget","submitVote","isValidCandidate","CandidateChiefDialog","setIsVoter","submitChiefCandidate","dropOutChiefCandidate","PlayerControl","playerInfo","playerCalled","openChiefCandidate","setOpenChiefCandidate","setRoleName","uuid","dataRoleName","setTimeout","root","CardContent","isFlipped","flipDirection","TemplateInfo","Player","GET_PLAYERS","UPDATE_PLAYER_PASS","Icon","viewBox","fill","path","Login","playerId","setPlayerId","playerPass","setPlayerPass","stopPolling","startPolling","mdiPaw","updatePlayerPass","isValid","position","left","transform","renderOption","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","auth","LOG_OFF","Copyright","Date","getFullYear","LogoffButton","logoff","getPlayer","login","CssBaseline","AppBar","Toolbar","edge","pt","App","isDarkMode","useMemo","createMuiTheme","primary","main","ThemeProvider","exact","ApolloProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6407301a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 750,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst SET_DIE_STATUS = gql`\n  mutation SetDieStatus($id: Int!) {\n    setDieStatus(id: $id)\n  }\n`;\nconst SET_CHIEF_ID = gql`\n  mutation SetChiefId($id: Int!) {\n    setChiefId(id: $id)\n  }\n`;\n\nconst SET_VOTE_WEIGHTED_ID = gql`\n  mutation SetVoteWeightedId($id: Int!) {\n    setVoteWeightedId(id: $id)\n  }\n`;\n\nconst RESET_CHIEF_CANDIDATE = gql`\n  mutation ResetChiefCandidate($id: Int!){\n    resetChiefCaniddate(id: $id)\n  }\n`;\n\n//voteWeightedId\n\nexport default function PlayerTable(props) {\n  const classes = useStyles();\n  const [setDie] = useMutation(SET_DIE_STATUS);\n  const [setChiefId] = useMutation(SET_CHIEF_ID);\n  const [setVoteWeightedId] = useMutation(SET_VOTE_WEIGHTED_ID);\n  const [resetChiefCandidate] = useMutation(RESET_CHIEF_CANDIDATE);\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>警長</TableCell>\n            <TableCell>死亡</TableCell>\n            <TableCell>放逐加權</TableCell>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"left\">玩家</TableCell>\n            <TableCell align=\"right\">角色</TableCell>\n            <TableCell align=\"right\">投票</TableCell>\n            <TableCell align=\"center\">警長</TableCell>\n            <TableCell align=\"center\">放逐</TableCell>\n            <TableCell align=\"right\">上線</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>\n                {(row.id === 0 ||\n                  props.chiefId >= 0 ||\n                  (row.chiefVoteState &&\n                    row.chiefVoteState.isCandidate &&\n                    !row.chiefVoteState.isDropedOut)) && (\n                  <Checkbox\n                    onChange={(e) => {\n                      setChiefId({ variables: { id: row.id } });\n                    }}\n                    checked={row.id === props.chiefId}\n                    color=\"primary\"\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                )}\n\n                {row.chiefVoteState.type && (\n                  <button onClick={()=>{\n                    resetChiefCandidate({ variables: { id: row.id } });\n                  }}>重置 {`(${row.chiefVoteState.type})`}</button>\n                )}\n              </TableCell>\n              <TableCell>\n                {row.id ? (\n                  <Checkbox\n                    onChange={(e) => {\n                      setDie({ variables: { id: row.id } });\n                    }}\n                    checked={row.isDie}\n                    color=\"primary\"\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                ) : null}\n              </TableCell>\n              <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    //setChiefId({variables:{id:row.id}});\n                    setVoteWeightedId({ variables: { id: row.id } });\n                  }}\n                  checked={row.id === props.voteWeightedId}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.roleName}</TableCell>\n              <TableCell align=\"right\">{row.votedNumber}</TableCell>\n              <TableCell align=\"right\">{row.chiefVote.toString()}</TableCell>\n              <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty\n                      ? \"gray\"\n                      : row.isVoteFinish\n                      ? \"lightgreen\"\n                      : \"orange\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 750,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst SET_DARK_DIE_STATUS = gql`\n  mutation SetDarkDieStatus($targets: [Int]!) {\n    setDarkDieStatus(targets: $targets)\n  }\n`;\n\nconst SET_DIE_STATUS = gql`\n  mutation SetDieStatus($id: Int!) {\n    setDieStatus(id: $id)\n  }\n`;\nconst SET_CHIEF_ID = gql`\n  mutation SetChiefId($id: Int!) {\n    setChiefId(id: $id)\n  }\n`;\n\nconst SET_VOTE_WEIGHTED_ID = gql`\nmutation SetVoteWeightedId($id: Int!) {\n  setVoteWeightedId(id: $id)\n}\n`\n\nexport default function PlayerTable(props) {\n  const classes = useStyles();\n\n  const [idSet, setIdSet] = useState(new Set());\n\n  const [setDie] = useMutation(SET_DARK_DIE_STATUS);\n  const [setChiefId] = useMutation(SET_CHIEF_ID);\n  const [setVoteWeightedId] = useMutation(SET_VOTE_WEIGHTED_ID);\n  return (\n    <>\n      <Box display=\"flex\">\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n          setDie({variables:{targets:[...idSet]}});\n        }}>\n          確認死亡\n        </Button>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>警長</TableCell>\n              <TableCell>死亡</TableCell>\n              <TableCell>放逐加權</TableCell>\n              <TableCell>ID</TableCell>\n\n              <TableCell align=\"left\">玩家</TableCell>\n              <TableCell align=\"right\">角色</TableCell>\n              <TableCell align=\"right\">投票</TableCell>\n              <TableCell align=\"center\">警長</TableCell>\n              <TableCell align=\"center\">放逐</TableCell>\n              <TableCell align=\"right\">上線</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.data.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>\n                  <Checkbox\n                    disabled\n                    onChange={(e) => {\n                      setChiefId({ variables: { id: row.id } });\n                    }}\n                    checked={row.id === props.chiefId}\n                    color=\"primary\"\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </TableCell>\n                <TableCell>\n                  {row.id ? (\n                    <Checkbox\n                      onChange={(e) => {\n                        const newSet = new Set(idSet);\n                        if (idSet.has(row.id)) {\n                          newSet.delete(row.id);\n                        } else {\n                          newSet.add(row.id);\n                        }\n\n                        setIdSet(newSet);\n                        //setDie({variables:{id:row.id}});\n                      }}\n                      checked={row.isDie || idSet.has(row.id)}\n                      disabled={row.isDie}\n                      color=\"primary\"\n                      inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                    />\n                  ) : null}\n                </TableCell>\n                <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    //setChiefId({variables:{id:row.id}});\n                    setVoteWeightedId({variables:{id:row.id}});\n                  }}\n                  checked={row.id === props.voteWeightedId}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />\n              </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"right\">{row.name}</TableCell>\n                <TableCell align=\"right\">{row.roleName}</TableCell>\n                <TableCell align=\"right\">{row.votedNumber}</TableCell>\n                <TableCell align=\"right\">{row.chiefVote.toString()}</TableCell>\n                <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n                <TableCell align=\"right\">\n                  <span\n                    style={{\n                      color: row.isEmpty\n                        ? \"gray\"\n                        : row.isVoteFinish\n                        ? \"lightgreen\"\n                        : \"orange\",\n                      transition: \"all .3s ease\",\n                      fontSize: \"24px\",\n                      marginRight: \"10px\",\n                    }}\n                  >\n                    &#x25cf;\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport { useQuery, useMutation , useLazyQuery} from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      number\n    }\n    players {\n      id\n      name\n      roleName\n      isEmpty\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\n//if the number = 0 will not show\n//caculate the total number\nfunction processData(data) {\n  let total = 0;\n\n  const result = [];\n\n  data.forEach((d) => {\n    const { number } = d;\n    if (number) {\n      total += number;\n      result.push(d);\n    }\n  });\n  return { total, data: result };\n}\n\nfunction BaseTable(props) {\n  const classes = useStyles();\n\n \n  \n  const { total, data } = processData(props.data);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>角色</TableCell>\n\n            <TableCell align=\"right\">人數</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <React.Fragment key={row.name}>\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.number}</TableCell>\n              </TableRow>\n              {row.players ? (\n                <TableRow align=\"left\">\n                  {row.players.map((v,idx) => (\n                    <div style={{ fontSize: 22, marginLeft:45 }} key={idx}>{`${v.id} : ${v.name}`}</div>\n                  ))}\n                </TableRow>\n              ) : null}\n           </React.Fragment>\n          ))}\n          <TableRow>\n            <TableCell align=\"right\">總人數</TableCell>\n            <TableCell align=\"right\">{total}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction RoleTable(props) {\n\n  return <BaseTable data={props.data} />;\n\n  /*\n  const { variables, query, pollInterval } = props;\n\n  \n  const [queryData,{ loading, error, data: rawData, called}] = useLazyQuery(query, {\n    //fetchPolicy:\"network-only\",\n    variables,\n    //pollInterval\n  });\n\n\n  let isMounted = true;\n useEffect(() => {\n   if (isMounted) {\n     queryData();\n   }\n\n   const interval = setInterval(() => {\n     if (isMounted) {\n       queryData();\n     }\n   }, 500);\n\n   return () => {\n     clearInterval(interval);\n     isMounted = false;\n   };\n }, []);\n\n  if (!called || !rawData) {\n    return <div>Loading</div>;\n  }\n\n  const data = props.parseData(rawData);\n\n  console.log(data, variables, query, rawData);\n\n  return <BaseTable data={data} />;\n  */\n}\n\nexport { RoleTable, BaseTable };\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\n\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      \n    }\n    \n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function AddRole(props) {\n  const classes = useStyles();\n  const [roleId, setRoleId] = React.useState(-1);\n  const [roleNumber, setRoleNumber] = React.useState(0);\n  const { loading, error, data } = useQuery(GET_ROLES);\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  console.log(data)\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={data.roles.filter((d) => d.id > 0)}\n        getOptionLabel={(option) => option.name}\n        style={{ width: 300 }}\n        onChange={handleRoleChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"角色\"\n            variant=\"outlined\"\n            margin=\"dense\"\n          />\n        )}\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"人數\"\n        variant=\"outlined\"\n        className={classes.margin}\n        margin=\"dense\"\n        type=\"number\"\n        value={roleNumber}\n        onChange={(e) => setRoleNumber(e.target.value)}\n      />\n      <div style={{ marginTop: 5 }}>\n        <Fab\n          size=\"medium\"\n          color=\"secondary\"\n          aria-label=\"add\"\n          size=\"small\"\n          onClick={() => {\n            props.updateRoleNumber({\n              id: roleId,\n              number: parseInt(roleNumber),\n            });\n            /*\n            updateRoleNumber({\n              variables: { id: roleId, number: parseInt(roleNumber) },\n            });\n            */\n          }}\n        >\n          <SaveIcon />\n        </Fab>\n      </div>\n    </div>\n  );\n}\n","export default {\n    CARD: 'card',\n  }","import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move',\n}\nconst Card = ({ id, text, index, moveCard }) => {\n  const ref = useRef(null)\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n  return (\n    <div ref={ref} style={{ ...style, opacity }}>\n      {text}\n    </div>\n  )\n}\nexport default Card","import React, { useState, useCallback } from \"react\";\nimport Card from \"./Card\";\nimport update from \"immutability-helper\";\nconst style = {\n  width: 400,\n};\nconst Container = (props) => {\n  {\n    const [cards, setCards] = useState([...props.data]);\n    const moveCard = useCallback(\n      (dragIndex, hoverIndex) => {\n        const dragCard = cards[dragIndex];\n        const newCards = update(cards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ],\n        });\n        setCards(newCards);\n\n        props.onUpdate(newCards)\n      },\n      [cards]\n    );\n    const renderCard = (card, index) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          moveCard={moveCard}\n        />\n      );\n    };\n    return (\n      <>\n        <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n      </>\n    );\n  }\n};\nexport default Container;\n","import React, { useEffect } from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport AddRole from \"./AddRole\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DragBox from \"../src/drag/Container\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\n\nconst GET_TEMPLATE = gql`\n  query GetTemplate($name: String!) {\n    template(name: $name) {\n      roles {\n        name\n        number\n        id\n      }\n      description\n    }\n  }\n`;\n\nconst UPDATE_ROLE_NUMBER = gql`\n  mutation UpdateTempl($roleId: Int!, $number: Int!, $name: String!) {\n    updateTemplateRole(name: $name, number: $number, roleId: $roleId)\n  }\n`;\n\nconst UPDATE_RULE = gql`\n  mutation UpdateRule($name: String!, $description: String!) {\n    updateTemplateDescription(name: $name, description: $description)\n  }\n`;\n\nconst UPDATE_ROLE_PRIORITY = gql`\n  mutation UpdateRolePriority($name: String!, $ids: [Int]!) {\n    updateTemplateRolePriority(name: $name, ids: $ids)\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst convertToDragData = (data) => {\n  const result = [];\n  data.forEach((d) => {\n    const { name, id } = d;\n    result.push({ id, text: name });\n  });\n  return result;\n};\n\nfunction EditDarkPriority(props) {\n  const { name } = props;\n\n  const [priorityList, setPrioritylist] = React.useState([]);\n  const [orgPriorityList, setOrgPriorityList] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [geTemplate, { loading, error, data, called }] = useLazyQuery(\n    GET_TEMPLATE,\n    { fetchPolicy: \"network-only\" }\n\n    /*\n    onCompleted: (res) => {\n      console.log(\"complete\", res);\n      const idData = convertToDragData(res.template.roles);\n      //setPrioritylist(idData.map((v) => v.id));\n      //setOrgPriorityList(idData.map((v) => v.id));\n    },\n    */\n  );\n\n  console.log(data);\n  const [updateRolePriority, res] = useMutation(UPDATE_ROLE_PRIORITY, {\n    onCompleted: () => {\n      //refetch();\n      console.log(\"update dark\");\n      geTemplate({ variables: { name } });\n    },\n  });\n\n  React.useEffect(() => {\n    geTemplate({ variables: { name } });\n  }, []);\n\n  React.useEffect(() => {\n    if (!loading && called) {\n      const idData = convertToDragData(data.template.roles);\n      setPrioritylist(idData.map((v) => v.id));\n      setOrgPriorityList(idData.map((v) => v.id));\n    }\n  }, [data]);\n\n  if (!called || loading) {\n    return <div>Loading</div>;\n  }\n\n  const dragData = convertToDragData(data.template.roles);\n\n  return (\n    <DndProvider backend={Backend}>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          updateRolePriority({ variables: { name, ids: priorityList } });\n        }}\n        color={\n          orgPriorityList.toString() === priorityList.toString()\n            ? \"primary\"\n            : \"secondary\"\n        }\n      >\n        <SaveIcon />\n      </IconButton>\n      <DragBox\n        data={dragData}\n        onUpdate={(data) => {\n          console.log(\"update view\");\n          setPrioritylist(data.map((v) => v.id));\n        }}\n      />\n    </DndProvider>\n  );\n}\n\nfunction EditRole(props) {\n  const { name, data } = props;\n  const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  React.useEffect(() => {\n    console.log(\"mount\" + name);\n\n    return () => {\n      console.log(\"umount\" + name);\n    };\n  }, []);\n\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>\n        {name}\n      </Typography>\n      <AddRole\n        updateRoleNumber={({ id: roleId, number }) => {\n          console.log(roleId, name);\n          updateRoleNumber({ variables: { roleId, name, number } });\n        }}\n      />\n\n      <RoleTable data={data} />\n\n      {/*<RoleTable\n        data={data}\n        query={GET_TEMPLATE}\n        variables={{ name }}\n        parseData={(d) => {\n            console.log(d)\n          return d.template.roles;\n        }}\n        pollInterval={500}\n      />*/}\n    </div>\n  );\n}\n\nfunction EditRuleCore(props) {\n  const [value, setValue] = React.useState(props.value);\n  return (\n    <div>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          props.updateRule({\n            variables: { description: value, name: props.name },\n          });\n        }}\n        color={value === props.value ? \"primary\" : \"secondary\"}\n      >\n        <SaveIcon />\n      </IconButton>\n      <TextField\n        id=\"outlined-multiline-static\"\n        multiline\n        rows={4}\n        fullWidth\n        value={value}\n        variant=\"outlined\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </div>\n  );\n}\n\nfunction EditRule(props) {\n  const { name } = props;\n\n  const { loading, error, data, refetch } = useQuery(GET_TEMPLATE, {\n    variables: { name },\n  });\n\n  const [updateRule, ruleResult] = useMutation(UPDATE_RULE, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <EditRuleCore\n      value={data.template.description}\n      updateRule={updateRule}\n      name={name}\n    />\n  );\n}\n\nexport default function EditTemplate(props) {\n  const { name, data } = props;\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper square>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n      >\n        <Tab label=\"角色\" />\n        <Tab label=\"規則\" />\n        <Tab label=\"黑夜順序\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <EditRole name={name} data={data} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <EditRule name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <EditDarkPriority name={name} />\n      </TabPanel>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery} from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddRole from \"./AddRole\";\nimport EditTemplateRole from \"./EditTemplateRole\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Box from \"@material-ui/core/Box\";\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst GET_TEMPLATES = gql`\n  {\n    templates {\n      isEnabled\n      name\n    }\n  }\n`;\n\nconst ADD_TEMPLATE = gql`\n  mutation addTemplate($name: String!) {\n    addNewTemplate(name: $name)\n  }\n`;\n\nconst DELETE_TEMPLATE = gql`\n  mutation DeleteTemplate($name: String!) {\n    deleteTemplate(name: $name)\n  }\n`;\n\nconst ENABLE_TEMPLATE = gql`\n  mutation EnableTemplate($name: String!) {\n    enableTemplate(name: $name)\n  }\n`;\n\nfunction TemplateControl(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>選擇</TableCell>\n            <TableCell align=\"left\">遊戲模式</TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>編輯</div>\n            </TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>刪除</div>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      props.onSelect(row.name);\n                    }\n                  }}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  checked={row.isEnabled}\n                />\n              </TableCell>\n              <TableCell align=\"left\">{row.name}</TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    console.log(row.name);\n                    props.onEdit(row.name);\n                  }}\n                  disabled={!row.isEnabled}\n                >\n                  <CreateIcon />\n                </IconButton>\n              </TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    //props.onEdit(row.name);\n                    props.onDelete(row.name);\n                  }}\n                  disabled={row.isEnabled}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction TemplateTable(props) {\n  const classes = useStyles();\n  \n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [name, setName] = React.useState(\"\");\n  const [isBusy, setIsBusy] = React.useState(false);\n\n\n  /*\n  const [getTemplate ,{ loading, error, data, stopPolling, startPolling, called }] = useLazyQuery(\n    GET_TEMPLATES\n  );\n    */\n\n\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n\n      /*\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n      */\n    },\n  });\n\n\n  /*\n  React.useEffect(() => {\n    //startPolling(500); // will be called only once\n    return stopPolling; // just return cleanup function without making new one\n  }, []);\n\n  if (loading ) {\n    return <div>Loading</div>;\n  }\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n  */\n \n\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"模式名稱\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n\n        <div style={{ marginTop: 5 }}>\n          <Fab\n            size=\"medium\"\n            color=\"secondary\"\n            aria-label=\"add\"\n            size=\"small\"\n            onClick={() => {\n              addTemplate({ variables: { name } });\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </div>\n      </div>\n      <Container maxWidth=\"sm\">\n        <TemplateControl\n          data={props.data.templates}\n          onEdit={(name) => {\n            props.setEditName(name);\n          }}\n          onSelect={(name) => {\n            enableTemplate({ variables: { name } });\n            //stopPolling();\n          }}\n          onDelete={(name) => {\n            deleteTemplate({ variables: { name } });\n          }}\n        />\n        </Container>\n    </div>\n  );\n}\n\nexport default function Admin(props) {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"\");\n  const [editName, setEditName] = React.useState(\"\");\n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [isBusy, setIsBusy] = React.useState(false);\n\n  console.log()\n\n  /*\n  const { loading, error, data, stopPolling, startPolling, called } = useQuery(\n    GET_TEMPLATES,\n    {\n      pollInterval: 500,\n      //notifyOnNetworkStatusChange:true\n    }\n  );\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n    },\n  });\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n  */\n\n  if (editName) {\n    return (\n      <div>\n        <Box display=\"flex\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              setEditName(\"\");\n            }}\n          >\n            退出\n          </Button>\n        </Box>\n        <EditTemplateRole name={editName} data={props.data}/>\n      </div>\n    );\n  }\n\n  return (\n    <TemplateTable setEditName={name=>{setEditName(name)}} data={props.tData}/>\n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\n//import RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {BaseTable as BaseRoleTable} from \"./RoleTable\";\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n  }\n`;\n\n\n\nexport default function EnabledTemplate(props) {\n\n  /*\n    const { loading, error, data } = useQuery(GET_ENABLED_TEMPLATE, {\n      fetchPolicy: \"network-only\",\n    });\n  \n    if (loading) {\n      return <div>Loading</div>;\n    }\n  \n   */\n    const { name, description ,roles} = props.data.enabledTemplate;\n\n    \n    return (\n      <div>\n        <Typography variant=\"h2\" gutterBottom>\n          {name}\n        </Typography>\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          rows={6}\n          fullWidth\n          value={description || \"\"}\n          variant=\"outlined\"\n          label=\"規則\"\n          disabled\n          \n        />\n       <BaseRoleTable data={roles}/>\n      </div>\n    );\n  }\n\n\n\n","import React, { useEffect } from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport DarkPlayerTable from \"./DarkPlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nconst GET_ROLES = gql`\n  {\n    templates {\n      isEnabled\n      name\n    }\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n    players {\n      isTarget\n      id\n      name\n      roleName\n      vote\n      chiefVote\n      isEmpty\n      isDie\n      isVoteFinish\n      votedNumber\n      chiefVoteState {\n        isDropedOut\n        isCandidate\n        type\n      }\n    }\n    gameInfo(id: 0) {\n      isVoteFinish\n      chiefId\n      isDark\n      voteWeightedId\n      hasVoteTarget\n      hasChief\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst GENERATE_TEMPLATE_ROLE = gql`\n  mutation GenerateTemplateRole($isCovertWolfToHuman: Boolean!) {\n    generateTemplateRole(isCovertWolfToHuman: $isCovertWolfToHuman)\n  }\n`;\n\nconst GENERATE_TEMPLATE_PLAYER = gql`\n  mutation GenerateTemplatePlayer {\n    generateTemplatePlayer\n  }\n`;\n\nconst REMOVE_ALL_PLAYER = gql`\n  mutation RemoveAllPlayer {\n    removeAllPlayer\n  }\n`;\n//enableTemplate(name:\"777\")\n\nconst VOTE_START = gql`\n  mutation VoteStart($targets: [Int]) {\n    voteStart(targets: $targets)\n  }\n`;\n\nconst VOTE_CHIEF_START = gql`\n  mutation VoteChiefStart {\n    voteChiefStart\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst parseData = (data) => {\n  const playerGroup = {};\n\n  data.players.forEach((p) => {\n    const { roleName, name, id } = p;\n    if (playerGroup[roleName]) {\n      playerGroup[roleName].push({ name: name || \"\", id });\n    } else {\n      playerGroup[roleName] = [{ name: name || \"\", id }];\n    }\n  });\n\n  const result = [];\n\n  data.enabledTemplate.roles.forEach((r) => {\n    const { name } = r;\n    result.push({ ...r, players: playerGroup[name] });\n  });\n\n  return result;\n};\n\nfunction TemplateRoleTable(props) {\n  return <RoleTable data={props.data} />;\n\n  /*\n  return (\n    <RoleTable\n\n      query={GET_ENABLED_TEMPLATE}\n      variables={{}}\n      parseData={(data) => {\n        const playerGroup = {};\n\n        data.players.forEach((p) => {\n          const { roleName, name, id } = p;\n          if (playerGroup[roleName]) {\n            playerGroup[roleName].push({ name: name || \"\", id });\n          } else {\n            playerGroup[roleName] = [{ name: name || \"\", id }];\n          }\n        });\n\n        console.log(playerGroup);\n\n        const result = [];\n\n        data.enabledTemplate.roles.forEach((r) => {\n          console.log(\"r\", r);\n\n          const { name } = r;\n          result.push({ ...r, players: playerGroup[name] });\n        });\n\n        console.log(result);\n\n        return result;\n      }}\n      pollInterval={500}\n    />\n  );\n  */\n}\n\nfunction VoteAction(props) {\n  const [targetList, setTargetList] = React.useState([]);\n  const [voteStart] = useMutation(\n    props.hasChief || props.hasVoteTarget ? VOTE_START : VOTE_CHIEF_START,\n    {\n      onCompleted: () => {\n        props.onClose();\n      },\n    }\n  );\n  //const [submitVote, { called }] = useMutation(SUBMIT_VOTE);\n\n  const isLock = props.hasTarget || props.hasChief;\n\n  return (\n    <>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          {`${\n            props.hasChief ? `請選擇放逐的目標` : `請選擇警長候選人`\n          }, 目標必須多於一人, 投票人數也必須多於一人`}\n        </DialogContentText>\n        {props.players\n          .filter((p) => {\n            if (props.hasVoteTarget) {\n              return p.isTarget;\n            } else if (!props.hasChief) {\n              return (\n                p.chiefVoteState.isCandidate && !p.chiefVoteState.isDropedOut\n              );\n            }\n\n            return !p.isDie && p.id !== 0;\n          })\n          .map((player) => (\n            <div key={player.id}>\n              <Radio\n                checked={targetList.includes(player.id)}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  if (\n                    !targetList.includes(player.id) &&\n                    targetList.length + 1 !==\n                      props.players.filter((p) => !p.isDie && p.id !== 0).length\n                  ) {\n                    setTargetList([...targetList, player.id]);\n                  }\n                }}\n              />\n              {` ${player.id} : ${player.name || \"\"}`}\n            </div>\n          ))}\n        <Radio\n          checked={targetList.length === 0}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            if (!isLock) {\n              setTargetList([]);\n            }\n          }}\n        />\n        {`所有人`}\n      </DialogContent>\n      <DialogActions>\n        {(targetList.length === 0 || targetList.length > 1) && (\n          <Button\n            onClick={() => {\n              voteStart({ variables: { targets: targetList } });\n              //submitVote({variables:{id:props.id, target}})\n            }}\n            color=\"primary\"\n          >\n            確認\n          </Button>\n        )}\n      </DialogActions>\n    </>\n  );\n}\n\nfunction Game(props) {\n  const classes = useStyles();\n\n  //const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  const [generateRole] = useMutation(GENERATE_TEMPLATE_ROLE);\n  const [generatePlayer] = useMutation(GENERATE_TEMPLATE_PLAYER);\n  const [removeAllPlayer] = useMutation(REMOVE_ALL_PLAYER);\n  const [voteStart] = useMutation(VOTE_START);\n  //const [roleId, setRoleId] = React.useState(-1);\n  //const [roleNumber, setRoleNumber] = React.useState(0);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name || \"\");\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n  const [state, setState] = React.useState({\n    isCovertWolfToHuman: false,\n  });\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: 0, name: value },\n      });\n    }\n  }, [value]);\n  /*\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n  */\n\n  const hasChief = props.chiefId !== -1;\n\n  if (props.isPlayerMode) {\n    if (props.isDark) {\n      return (\n        <DarkPlayerTable\n          data={props.players}\n          chiefId={props.chiefId}\n          voteWeightedId={props.voteWeightedId}\n        />\n      );\n    }\n\n    return (\n      <>\n        <Dialog\n          aria-labelledby=\"simple-dialog-title\"\n          open={isOpen}\n          onClose={() => {\n            setIsOpen(false);\n          }}\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            {hasChief ? `放逐開始` : `競選警長`}\n          </DialogTitle>\n          <VoteAction\n            players={props.players}\n            onClose={() => {\n              setIsOpen(false);\n            }}\n            hasChief={hasChief}\n            hasVoteTarget={props.hasVoteTarget}\n          />\n        </Dialog>\n        <Box display=\"flex\">\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => {\n              generateRole({\n                variables: { isCovertWolfToHuman: state.isCovertWolfToHuman },\n              });\n            }}\n          >\n            <div style={{ fontWeight: 800 }}>產生角色</div>\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              removeAllPlayer();\n            }}\n          >\n            <div style={{ fontWeight: 800 }}>刪除玩家</div>\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              //voteStart();\n              setIsOpen(true);\n            }}\n          >\n            {hasChief ? `放逐` : `警長`}\n          </Button>\n        </Box>\n        <Box display=\"flex\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.isCovertWolfToHuman}\n                onChange={handleChange}\n                name=\"isCovertWolfToHuman\"\n              />\n            }\n            label=\"轉化狼人變成人類\"\n          />\n        </Box>\n        <Box display=\"flex\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"姓名\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            value={name}\n            onChange={(e) => {\n              setValue(e.target.value);\n              setName(e.target.value);\n            }}\n          />\n        </Box>\n        <PlayerTable\n          data={props.players}\n          chiefId={props.chiefId}\n          voteWeightedId={props.voteWeightedId}\n        />\n      </>\n    );\n  }\n\n  return (\n    <div style={{}}>\n      <Box display=\"flex\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            generatePlayer();\n          }}\n        >\n          加入玩家\n        </Button>\n      </Box>\n\n      <EnabedTemplateInfo data={props.data} />\n    </div>\n  );\n}\n\nexport default function God(props) {\n  const history = useHistory();\n  const [value, setValue] = React.useState(0);\n  const [getRole, { loading, data, error, called }] = useLazyQuery(GET_ROLES, {\n    fetchPolicy: \"network-only\",\n  });\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      getRole();\n    }\n\n    const interval = setInterval(() => {\n      if (isMounted) {\n        getRole();\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (error && !loading) {\n      error.graphQLErrors.forEach((e) => {\n        const { extensions } = e;\n        if (extensions.code === \"UNAUTHENTICATED\") {\n          console.log(\"no access!!!\");\n          history.push(\"/\");\n        }\n      });\n\n      console.log(\"set dark\");\n\n      if (data && data.gameInfo.isDark) {\n        props.setDarkMode(true);\n      }\n    }\n  }, [error, loading, data]);\n\n  React.useEffect(() => {\n    if (data) {\n      props.setDarkMode(data.gameInfo.isDark);\n    }\n  }, [data]);\n\n  if (!called || !data) {\n    return <div>Loading</div>;\n  }\n\n  const { id, pass, name } = props;\n\n  const isPlayerMode = data.players.length > 1 ? true : false;\n  console.log(data);\n  return (\n    <Container maxWidth={isPlayerMode && value === 0 ? \"lg\" : \"sm\"}>\n      <Paper elevation={3}>\n        <Tabs\n          value={value}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n          aria-label=\"disabled tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"遊戲\" />\n          <Tab label={isPlayerMode ? \"黑夜視野\" : \"模式選擇\"} />\n          {isPlayerMode && <Tab label=\"模式\" />}\n        </Tabs>\n        <TabPanel value={value} index={0}>\n          <Game\n            isPlayerMode={isPlayerMode}\n            id={id}\n            pass={pass}\n            name={name}\n            players={data.players}\n            chiefId={data.gameInfo.chiefId}\n            isDark={data.gameInfo.isDark}\n            voteWeightedId={data.gameInfo.voteWeightedId}\n            data={data}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          {isPlayerMode ? (\n            <TemplateRoleTable data={parseData(data)} />\n          ) : (\n            <Admin data={parseData(data)} tData={data} />\n          )}\n        </TabPanel>\n\n        {isPlayerMode && (\n          <TabPanel value={value} index={2}>\n            <EnabedTemplateInfo data={data} />\n          </TabPanel>\n        )}\n      </Paper>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport ReactCardFlip from \"react-card-flip\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Avatar from \"react-avatar\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\n\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\nimport { useHistory } from \"react-router-dom\";\nimport { ReactSVG } from 'react-svg'\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYER_INFO = gql`\n  query GetPlayer($id: Int!, $pass: String!) {\n    player(id: $id, pass: $pass) {\n      id\n      name\n      roleName\n    }\n    players(id: $id) {\n      id\n      name\n      isEmpty\n      revealedRole\n      isDie\n      vote\n      chiefVote\n      isValidCandidate\n      isVoteFinish\n      chiefVoteState {\n        type\n      }\n    }\n    wolfKillList(id: $id) {\n      id\n      isKill\n    }\n    gameInfo(id: $id) {\n      uuid\n      isVoteFinish\n      chiefId\n      isDark\n      chiefVoteState {\n        isDropedOut\n        isCandidate\n        type\n      }\n    }\n    darkInfo(id: $id) {\n      isStart\n      remainTime\n      actRoleType\n      darkDay\n      targetList {\n        id\n        isKill\n      }\n    }\n  }\n`;\n\nconst SUBMIT_VOTE = gql`\n  mutation SubmitVote($target: Int!) {\n    submitVote(target: $target)\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst DARK_ACTION = gql`\n  mutation DarkAction($targetId: Int!, $id: Int!) {\n    exeDarkAction(targetId: $targetId, id: $id)\n  }\n`;\n\nconst SUBMIT_CHIEF_CANDIDATE = gql`\n  mutation submitChiefCandidate {\n    setIsChiefCandidate\n  }\n`;\n\nconst SET_IS_VOTER = gql`\n  mutation setIsVoter {\n    setIsVoter\n  }\n`;\n\nconst DROP_OUT_CHIEF_CANDIDATE = gql`\n  mutation dropOutChiefCandidate {\n    setIsChiefDropOut\n  }\n`;\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction PlayerTable(props) {\n  const classes = useStyles();\n  console.log(props.data);\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"center\">玩家</TableCell>\n            <TableCell align=\"center\">警長</TableCell>\n            <TableCell align=\"center\">放逐</TableCell>\n            <TableCell align=\"right\">狀態</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id === 0 ? (\n                  <div style={{width:30}}>\n                  <ReactSVG src=\"infinity.svg\" />\n                  </div>\n                ) : row.isDie ? (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    🐾\n                  </span>\n                ) : (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    {row.id}\n                  </span>\n                )}\n                {row.id === props.chiefId && row.id !== 0 && (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    🌟\n                  </span>\n                )}\n                {row.chiefVoteState &&\n                  row.chiefVoteState.type &&\n                  row.chiefVoteState.type == \"chief\" && (\n                    <span\n                      span\n                      aria-label=\"paw\"\n                      style={{ fontSize: 30, marginLeft: 5 }}\n                    >\n                      😃\n                    </span>\n                  )}\n                {row.chiefVoteState &&\n                  row.chiefVoteState.type &&\n                  row.chiefVoteState.type == \"drop\" && (\n                    <span\n                      span\n                      aria-label=\"paw\"\n                      style={{ fontSize: 30, marginLeft: 5 }}\n                    >\n                      😂\n                    </span>\n                  )}\n              </TableCell>\n              <TableCell align=\"center\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.chiefVote.toString()}</TableCell>\n              <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty\n                      ? \"gray\"\n                      : row.isVoteFinish\n                      ? \"lightgreen\"\n                      : \"orange\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst dialogContent = {\n  WITCH_KILL: { text: \"女巫毒人中\", music: new Audio(\"/witch_kill.mp3\") },\n  WITCH_SAVE: { text: \"女巫救人中\", music: new Audio(\"/witch_save.mp3\") },\n  WOLF: { text: \"狼人正在忙碌的殺人 請稍後\", music: new Audio(\"/wolf.mp3\") },\n  PROPHET: { text: \"預言家驗人\", music: new Audio(\"/prophet.mp3\") },\n  HUNTER: { text: \"獵人獵殺\", music: new Audio(\"/hunter.mp3\") },\n  GUARD: { text: \"守衛守人\", music: new Audio(\"/guard.mp3\") },\n};\n\nfunction DarkAction(props) {\n  const [darkActon] = useMutation(DARK_ACTION);\n  const seletingList = props.data.darkInfo.targetList.filter(\n    (v) => v.isKill === true\n  );\n\n  console.log(seletingList);\n  //const [actRoleType, setActRoleType] = React.useState()\n  const { actRoleType } = props.data.darkInfo;\n\n  React.useEffect(() => {\n    console.log(\"rerender\");\n    dialogContent[actRoleType].music.play();\n\n    return () => {\n      dialogContent[actRoleType].music.pause();\n    };\n  }, [actRoleType]);\n\n  return (\n    <DialogContent>\n      <DialogTitle id=\"simple-dialog-title\">\n        \b第 {props.data.darkInfo.darkDay} 夜\n      </DialogTitle>\n\n      <DialogContentText id=\"alert-dialog-description\">\n        {dialogContent[actRoleType].text}\n      </DialogContentText>\n      {props.data.darkInfo.remainTime}\n\n      {props.data.darkInfo.targetList.length !== 0 && (\n        <>\n          {props.data.darkInfo.targetList.map((v, idx) => (\n            <div key={idx}>\n              <Radio\n                checked={v.isKill ? true : false}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  console.log(v.id);\n                  darkActon({ variables: { targetId: v.id, id: props.id } });\n                }}\n              />\n              {`player ${v.id}`}\n            </div>\n          ))}\n          <Radio\n            checked={seletingList.length === 0 ? true : false}\n            name=\"radio-button-demo\"\n            inputProps={{ \"aria-label\": \"B\" }}\n            onChange={() => {\n              darkActon({ variables: { targetId: -1, id: props.id } });\n            }}\n          />\n          {`none`}\n        </>\n      )}\n    </DialogContent>\n  );\n}\n\nfunction VoteAction(props) {\n  const [target, setTarget] = React.useState(-1);\n\n  const [submitVote, { called }] = useMutation(SUBMIT_VOTE);\n\n  return (\n    <>\n      <DialogContent>\n        {props.players\n          .filter((p) => p.isValidCandidate)\n          .map((player) => (\n            <div key={player.id}>\n              <Radio\n                checked={player.id === target}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  setTarget(player.id);\n                }}\n              />\n              {` ${player.id} : ${player.name || \"\"}`}\n            </div>\n          ))}\n        <Radio\n          checked={-1 === target}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            setTarget(-1);\n          }}\n        />\n        {`棄權`}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            submitVote({ variables: { target } });\n          }}\n          color=\"primary\"\n        >\n          確認\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction CandidateChiefDialog(props) {\n\n\n  const [setIsVoter] = useMutation(SET_IS_VOTER, { onCompleted: () => {\n    props.onClose();\n  },})\n\n  const [submitChiefCandidate] = useMutation(SUBMIT_CHIEF_CANDIDATE, {\n    onCompleted: () => {\n      props.onClose();\n    },\n  });\n\n  const [dropOutChiefCandidate] = useMutation(DROP_OUT_CHIEF_CANDIDATE, {\n    onCompleted: () => {\n      props.onClose();\n    },\n  });\n\n  return (\n    <>\n      {props.isCandidate ? (\n        <DialogTitle id=\"form-dialog-title\">是否退水？</DialogTitle>\n      ) : (\n        <DialogTitle id=\"form-dialog-title\">是否競選警長？</DialogTitle>\n      )}\n      <DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              if (props.isCandidate) {\n                dropOutChiefCandidate();\n              } else {\n                submitChiefCandidate();\n              }\n            }}\n            color=\"primary\"\n          >\n            確認\n          </Button>\n          {!props.isCandidate && <Button\n            onClick={() => {\n              setIsVoter();\n            }}\n            style={{color:'DarkOrange'}}\n          >\n            不要!\n          </Button>}\n          <Button\n            onClick={() => {\n              props.onClose();\n            }}\n            color=\"secondary\"\n          >\n            取消\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </>\n  );\n}\n\nfunction PlayerControl(props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [\n    playerInfo,\n    { loading, error, data, called: playerCalled },\n  ] = useLazyQuery(GET_PLAYER_INFO, { fetchPolicy: \"network-only\" });\n\n  const [openChiefCandidate, setOpenChiefCandidate] = React.useState(false);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name);\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      playerInfo({ variables: { id: props.id, pass: props.pass } });\n    }\n\n    const interval = setInterval(() => {\n      if (isMounted) {\n        playerInfo({ variables: { id: props.id, pass: props.pass } });\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: props.id, name: value },\n      });\n    }\n\n    if (error && !loading) {\n      history.push(\"/\");\n    }\n\n    //audioEl.play()\n  }, [value, error, loading]);\n\n  React.useEffect(() => {\n    if (data) {\n      props.setDarkMode(data.gameInfo.isDark);\n    }\n  }, [data]);\n\n  const [roleName, setRoleName] = React.useState(\"\");\n  const uuid = data ? data.gameInfo.uuid : \"\";\n  const dataRoleName = data ? data.player.roleName : \"\";\n  React.useEffect(() => {\n    setRoleName(\"\");\n\n    if (data) {\n      console.log(data);\n      setTimeout(() => {\n        setRoleName(data.player.roleName);\n      }, 1000);\n    }\n\n    return () => {\n      setRoleName(\"\");\n    };\n  }, [uuid, dataRoleName]);\n\n  if (!playerCalled || !data) {\n    return <div>Loading</div>;\n  }\n\n  const hasChief = data.gameInfo.chiefId !== -1;\n  const { id, name: playerName } = data.player;\n  return (\n    <>\n      <Dialog\n        aria-labelledby=\"simple-dialog-title\"\n        open={!data.gameInfo.isVoteFinish}\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {hasChief ? `放逐玩家` : `選擇警長`}\n        </DialogTitle>\n        <VoteAction players={data.players} id={id} />\n      </Dialog>\n\n      {!hasChief && (\n        <Box display=\"flex\">\n          {data.gameInfo.chiefVoteState ? (\n            <>\n              <Dialog\n                aria-labelledby=\"simple-dialog-title\"\n                open={openChiefCandidate}\n              >\n                <CandidateChiefDialog\n                  onClose={() => {\n                    setOpenChiefCandidate(false);\n                  }}\n                  isCandidate={data.gameInfo.chiefVoteState.isCandidate}\n                />\n              </Dialog>\n              {data.gameInfo.chiefVoteState.isCandidate ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setOpenChiefCandidate(true);\n                  }}\n                  disabled={data.gameInfo.chiefVoteState.isDropedOut}\n                >\n                  退水\n                </Button>\n              ) : (\n                <Button\n                  \n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setOpenChiefCandidate(true);\n                  }}\n                  disabled={data.gameInfo.chiefVoteState.type !== null}\n                  style={{ border: '2px solid' , fontWeight:800}}\n                >\n                  \n                  上警\n                  \n                </Button>\n              )}\n            </>\n          ) : null}\n        </Box>\n      )}\n      <Box display=\"flex\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"姓名\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => {\n            setValue(e.target.value);\n            setName(e.target.value);\n          }}\n        />\n      </Box>\n      <Card className={classes.root}>\n        <CardContent>\n          <ReactCardFlip\n            isFlipped={roleName ? true : false}\n            flipDirection=\"vertical\"\n          >\n            <Typography variant=\"h1\" component=\"h1\">\n              {\"❔\"}\n            </Typography>\n            <Typography variant=\"h2\" component=\"h2\">\n              {roleName || \"❔\"}\n            </Typography>\n          </ReactCardFlip>\n        </CardContent>\n      </Card>\n\n      <PlayerTable data={data.players} chiefId={data.gameInfo.chiefId} />\n    </>\n  );\n}\n\nfunction TemplateInfo() {\n  const { loading, error, data } = useQuery(GET_ENABLED_TEMPLATE, {\n    fetchPolicy: \"network-only\",\n  });\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return <EnabedTemplateInfo data={data} />;\n}\n\nexport default function Player(props) {\n  const { id, pass, name } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container maxWidth={\"sm\"}>\n      <Paper elevation={3}>\n        <Tabs\n          value={value}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n          aria-label=\"disabled tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"玩家\" />\n          <Tab label=\"模式\" />\n        </Tabs>\n        <TabPanel value={value} index={0}>\n          <PlayerControl\n            id={id}\n            pass={pass}\n            name={name}\n            setDarkMode={props.setDarkMode}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <TemplateInfo />\n        </TabPanel>\n      </Paper>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { ReactSVG } from 'react-svg'\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"react-avatar\";\nimport { mdiPaw } from \"@mdi/js\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      isEmpty\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      id\n    }\n  }\n`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nfunction Icon(props) {\n  return (\n    <svg viewBox=\"0 0 24 24\" style={{ width: \"1.5rem\", fill: \"white\" }}>\n      <path d={props.path} />\n    </svg>\n  );\n}\n\nexport default function Login() {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [playerId, setPlayerId] = React.useState(-1);\n  const [playerPass, setPlayerPass] = React.useState(\"\");\n  const [isValid, setIsValid] = React.useState(false);\n  const { loading, error, data, stopPolling, startPolling } = useQuery(\n    GET_PLAYERS,\n    {\n      //pollInterval: 500,\n      //fetchPolicy: \"network-only\",\n    }\n  );\n  console.log(mdiPaw);\n  const [\n    updatePlayerPass,\n    { loading: passLoading, data: passData },\n  ] = useMutation(UPDATE_PLAYER_PASS, {\n    onCompleted: (data) => {\n      if (data.updatePlayerPass.isValid) {\n        history.push(\"/game\");\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    startPolling(500);\n\n    return () => {\n      stopPolling();\n    };\n  }, []);\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <Container component=\"main\">\n      <div style={{ width: 350, position:'fixed', top:'50%', left:'50%', transform:\"translate(-50%, -50%)\" }}>\n        <Avatar src=\"test-3.png\" size=\"350\" />\n        <Autocomplete\n          fullWidth\n          id=\"combo-box-demo\"\n          className={classes.margin}\n          options={data.players}\n          getOptionLabel={(option) => `玩家 ${option.id}`}\n          renderOption={(option) => (\n            <React.Fragment>\n              <span\n                style={{\n                  color: option.isEmpty ? \"gray\" : \"lightgreen\",\n                  transition: \"all .3s ease\",\n                  fontSize: \"24px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                &#x25cf;\n              </span>\n              {` 玩家 ${option.id}`}\n            </React.Fragment>\n          )}\n          onChange={(event, newValue) => {\n            setPlayerId(newValue.id);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"玩家\"\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          )}\n        />\n\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"密碼\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          onChange={(e) => setPlayerPass(e.target.value)}\n          value={playerPass}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            updatePlayerPass({\n              variables: { id: playerId, pass: playerPass },\n            });\n          }}\n        >\n          <Icon path={mdiPaw} />\n        </Button>\n      </div>\n\n      {/*<Box mt={8}>\n        <Copyright />\n        </Box>*/}\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport {\n  useLazyQuery,\n  useQuery,\n  useMutation,\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Footer from \"./Footer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from \"react-avatar\";\nimport { ReactSVG } from 'react-svg'\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\n//import ApolloClient from \"apollo-boost\";\n\nimport God from \"./God\";\nimport Admin from \"./Admin\";\nimport Player from \"./Player\";\n\nimport LoginPage from \"./Login\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport blue from '@material-ui/core/colors/blue';\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"/graphql\",\n  }),\n});\n\nconst auth = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"/auth\",\n  }),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      isEmpty\n    }\n    login {\n      id\n      isValid\n    }\n  }\n`;\n\nconst LOG_OFF = gql`\n  mutation Logoff {\n    logoff\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      name\n    }\n  }\n`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n/*\nfunction Login() {\n  const classes = useStyles();\n\n  const [playerId, setPlayerId] = React.useState(-1);\n  const [playerPass, setPlayerPass] = React.useState(\"\");\n  const { loading, error, data } = useQuery(GET_PLAYERS);\n  const [updatePlayerPass, playerStatus] = useMutation(UPDATE_PLAYER_PASS);\n  const [isValidPlayerStatus, setIsValidPlayerStatus] = React.useState(false);\n  if (loading || playerStatus.loading) {\n    return <div>Loading</div>;\n  }\n\n  //if (playerStatus.data)\n\n  if (\n    playerStatus.called &&\n    playerStatus.data.updatePlayerPass.isValid &&\n    isValidPlayerStatus\n  ) {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <AppBar position=\"absolute\">\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                小狼狼\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  setIsValidPlayerStatus(false);\n                }}\n              >\n                退出\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          {\n            <div style={{ marginTop: 100 }}>\n              {playerId === 0 ? (\n                <God\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              ) : (\n                <Player\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              )}\n            </div>\n          }\n\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={{ marginTop: \"20%\" }}>\n        <Avatar round={true} src=\"wolf-login.png\" />\n        <Autocomplete\n          fullWidth\n          id=\"combo-box-demo\"\n          className={classes.margin}\n          options={data.players}\n          getOptionLabel={(option) => `玩家 ${option.id}`}\n          renderOption={(option) => (\n            <React.Fragment>\n              <span\n                style={{\n                  color: option.isEmpty ? \"gray\" : \"lightgreen\",\n                  transition: \"all .3s ease\",\n                  fontSize: \"24px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                &#x25cf;\n              </span>\n              {` 玩家 ${option.id}`}\n            </React.Fragment>\n          )}\n          onChange={(event, newValue) => {\n            setPlayerId(newValue.id);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"玩家\"\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          )}\n        />\n\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"密碼\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          onChange={(e) => setPlayerPass(e.target.value)}\n          value={playerPass}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            updatePlayerPass({\n              variables: { id: playerId, pass: playerPass },\n            });\n            setIsValidPlayerStatus(true);\n          }}\n        >\n          登入\n        </Button>\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n*/\n\nfunction LogoffButton() {\n  const history = useHistory();\n  const [logoff] = useMutation(LOG_OFF, {\n    onCompleted: () => {\n      history.push(\"/\");\n    },\n  });\n\n  return (\n    <Button\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={() => {\n        logoff();\n        //setIsValidPlayerStatus(false);\n      }}\n    >\n      退出\n    </Button>\n  );\n}\n\nfunction Game(props) {\n  const history = useHistory();\n  const [getPlayer, { loading, error, data }] = useLazyQuery(GET_PLAYERS, {\n    fetchPolicy: \"network-only\",\n  });\n\n  const classes = useStyles();\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      getPlayer();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      error.graphQLErrors.forEach((e) => {\n        const { extensions } = e;\n        if (extensions.code === \"UNAUTHENTICATED\") {\n          history.push(\"/\")\n          //setIsLogoff(true);\n        }\n      });\n    }\n  }, [error]);\n\n  if (loading || !data) {\n    return <div>Loading</div>;\n  }\n\n  //const [playerId, setPlayerId] = React.useState(-1);\n  //const [playerPass, setPlayerPass] = React.useState(\"\");\n\n  //const [isLogoff, setIsLogoff] = React.useState(false);\n  /*\n  const { loading, error, data } = useQuery(GET_PLAYERS, {\n    fetchPolicy: \"network-only\",\n  });\n  */\n\n  /*\n  const [logoff, {loading:logoffLoading, data:logoffdata}] = useMutation(LOG_OFF, {\n    onCompleted: () => {\n      console.log('complete')\n      //setIsLogoff(true);\n    },\n  });\n  */\n\n  /*\n  \n  */\n\n  /*\n  React.useEffect(() => {\n    if (!loading && isLogoff && !logoffLoading) {\n      history.push(\"/\");\n    }\n  }, [loading, isLogoff, logoffLoading]);\n  */\n  /*\n  if (loading) {\n    return <div>Loading</div>;\n  }\n  */\n\n  console.log(data, loading)\n\n  const playerId = data.login.id;\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      \n        <AppBar position=\"absolute\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              <div style={{width:50, margin:'auto', marginTop:10}}>\n            <ReactSVG src=\"wolf.svg\" />\n            </div>\n            </Typography>\n            <LogoffButton />\n          </Toolbar>\n        </AppBar>\n\n        <div style={{ marginTop: 100 }}>\n          {playerId === 0 ? (\n            <Container maxWidth={playerId === 0 ? \"md\" : \"sm\"}>\n            <God id={playerId} pass={\"\"} name={\"\"} setDarkMode={props.setDarkMode} />\n            </Container>\n          ) : (\n           \n            <Player id={playerId} pass={\"\"} name={\"\"} setDarkMode={props.setDarkMode}/>\n            \n          )}\n        </div>\n\n        <Box pt={4}>\n          <Copyright />\n        </Box>\n     \n    </React.Fragment>\n  );\n}\n\n/*\nconst theme = createMuiTheme({\n  \n  palette: {\n    primary: {\n      main: '#82b1ff',\n    },\n    type: 'dark',\n  },\n  \n});\n*/\n\nfunction App() {\n\n\n  const [isDarkMode, setDarkMode] = React.useState(false);\n\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: isDarkMode ? 'dark' : 'light',\n          primary: isDarkMode ? {\n            main: '#F8A9A0',\n          }:{\n            main: '#F8A9A0',\n          },\n        },\n       \n      }),\n    [isDarkMode],\n  );\n\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <ApolloProvider client={auth}>\n              <LoginPage />\n            </ApolloProvider>\n          </Route>\n\n          <Route exact path=\"/game\">\n            <ApolloProvider client={client}>\n              <Game setDarkMode={setDarkMode}/>\n            </ApolloProvider>\n          </Route>\n        </Switch>\n      </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}