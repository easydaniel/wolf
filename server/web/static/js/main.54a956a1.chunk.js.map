{"version":3,"sources":["logo.svg","ballot-box-with-ballot.png","Footer.js","PlayerTable.js","DarkPlayerTable.js","RoleTable.js","AddRole.js","drag/ItemTypes.js","drag/Card.js","drag/Container.js","EditTemplateRole.js","Admin.js","EnabledTemplateInfo.js","God.js","Player.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","footer","backgroundColor","palette","background","paper","padding","spacing","useStyles","margin","table","minWidth","title","flexGrow","menuButton","marginRight","SET_DIE_STATUS","gql","SET_CHIEF_ID","SET_VOTE_WEIGHTED_ID","RESET_CHIEF_CANDIDATE","UPDATE_PASS","FormDialog","props","React","useState","errMsg","setErrorMsg","useMutation","onError","console","log","onCompleted","setOpen","updatePass","open","pass","setPass","handleClose","Button","variant","color","onClick","Dialog","onClose","aria-labelledby","DialogContent","TextField","autoFocus","id","label","type","fullWidth","onChange","event","target","value","helperText","error","DialogActions","size","variables","VoteStatus","isCandidate","isDropout","src","voteLogo","style","height","width","span","aria-label","fontSize","marginLeft","CollapseSell","setDie","setChiefId","setVoteWeightedId","resetChiefCandidate","row","openDetail","setOpenDetail","Fragment","TableRow","TableCell","IconButton","chiefId","Checkbox","e","checked","isChief","inputProps","chiefVoteState","isDie","voteWeightedId","component","scope","align","name","roleName","votedNumber","chiefVote","toString","vote","isEmpty","isVoteFinish","transition","Collapse","in","timeout","unmountOnExit","Box","Typography","gutterBottom","Table","TableHead","TableBody","colSpan","PlayerTable","classes","TableContainer","Paper","className","data","map","key","SET_DARK_DIE_STATUS","Set","idSet","setIdSet","display","targets","disabled","newSet","has","delete","add","BaseTable","total","result","forEach","d","number","push","processData","players","v","idx","RoleTable","GET_ROLES","AddRole","roleId","setRoleId","roleNumber","setRoleNumber","useQuery","loading","justifyContent","Autocomplete","options","roles","filter","getOptionLabel","option","newValue","renderInput","params","marginTop","Fab","updateRoleNumber","parseInt","border","marginBottom","cursor","Card","text","index","moveCard","ref","useRef","useDrop","accept","ItemTypes","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","Container","cards","setCards","useCallback","dragCard","newCards","update","$splice","onUpdate","card","i","renderCard","GET_TEMPLATE","UPDATE_ROLE_NUMBER","UPDATE_RULE","UPDATE_ROLE_PRIORITY","TabPanel","children","other","role","hidden","p","convertToDragData","EditDarkPriority","priorityList","setPrioritylist","orgPriorityList","setOrgPriorityList","useLazyQuery","fetchPolicy","geTemplate","called","updateRolePriority","useEffect","idData","template","dragData","DndProvider","backend","Backend","ids","EditRole","EditRuleCore","setValue","updateRule","description","multiline","rows","EditRule","refetch","EditTemplate","square","Tabs","indicatorColor","textColor","Tab","ADD_TEMPLATE","DELETE_TEMPLATE","ENABLE_TEMPLATE","TemplateControl","onSelect","isEnabled","onEdit","onDelete","TemplateTable","addTemplate","deleteTemplate","setName","enableTemplate","maxWidth","templates","setEditName","Admin","editName","tData","EnabledTemplate","enabledTemplate","RESET_EVENT","UPDATE_PLAYER_NAME","GENERATE_TEMPLATE_ROLE","GENERATE_TEMPLATE_PLAYER","REMOVE_ALL_PLAYER","VOTE_START","VOTE_CHIEF_START","repeatTimes","parseData","playerGroup","r","TemplateRoleTable","VoteAction","targetList","setTargetList","hasChief","hasVoteTarget","voteStart","isLock","hasTarget","DialogContentText","isTarget","player","Radio","includes","length","Game","gameInfo","resetEvent","generateRole","generatePlayer","removeAllPlayer","isOpen","setIsOpen","useDebounce","updatePlayerName","isCovertWolfToHuman","state","setState","isPlayerMode","isDark","DialogTitle","Tooltip","placement","Badge","badgeContent","isEventBusy","FormControlLabel","control","autoComplete","God","history","useHistory","getRole","isMounted","interval","setInterval","clearInterval","graphQLErrors","extensions","code","setDarkMode","elevation","submit","container","paddingTop","paddingBottom","GET_PLAYER_INFO","SUBMIT_VOTE","SUBMIT_CHIEF_CANDIDATE","SET_IS_VOTER","DROP_OUT_CHIEF_CANDIDATE","GET_ENABLED_TEMPLATE","ChiefIcon","SvgIcon","setTarget","submitVote","isValidCandidate","CandidateChiefDialog","setIsVoter","submitChiefCandidate","dropOutChiefCandidate","PlayerControl","playerInfo","playerCalled","openChiefCandidate","setOpenChiefCandidate","setRoleName","uuid","dataRoleName","setTimeout","root","CardContent","isFlipped","flipDirection","TemplateInfo","Player","GET_PLAYERS","UPDATE_PLAYER_PASS","Icon","viewBox","fill","path","Login","playerId","setPlayerId","playerPass","setPlayerPass","stopPolling","startPolling","mdiPaw","updatePlayerPass","isValid","position","left","transform","renderOption","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","auth","LOG_OFF","Copyright","Date","getFullYear","LogoffButton","logoff","getPlayer","login","CssBaseline","AppBar","Toolbar","borderRadius","beforeInjection","svg","setAttribute","pt","App","isDarkMode","useMemo","createMuiTheme","secondary","main","primary","ThemeProvider","exact","ApolloProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.54a956a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/ballot-box-with-ballot.62b0527e.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport voteLogo from './ballot-box-with-ballot.png'\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 750,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst SET_DIE_STATUS = gql`\n  mutation SetDieStatus($id: Int!) {\n    setDieStatus(id: $id)\n  }\n`;\nconst SET_CHIEF_ID = gql`\n  mutation SetChiefId($id: Int!) {\n    setChiefId(id: $id)\n  }\n`;\n\nconst SET_VOTE_WEIGHTED_ID = gql`\n  mutation SetVoteWeightedId($id: Int!) {\n    setVoteWeightedId(id: $id)\n  }\n`;\n\nconst RESET_CHIEF_CANDIDATE = gql`\n  mutation ResetChiefCandidate($id: Int!) {\n    resetChiefCaniddate(id: $id)\n  }\n`;\n\nconst UPDATE_PASS = gql`\n  mutation UpdatePass($id: Int!, $pass: String!) {\n    updatePass(id: $id, pass: $pass)\n  }\n`;\n\n//voteWeightedId\n\nfunction FormDialog(props) {\n  const [errMsg, setErrorMsg] = React.useState(\"\");\n  const [updatePass] = useMutation(UPDATE_PASS, {\n    onError: () => {\n      setErrorMsg(\"Access Error!\");\n\n      console.log(\"error\");\n    },\n    onCompleted: () => {\n      setOpen(false);\n    },\n  });\n  const [open, setOpen] = React.useState(false);\n  const [pass, setPass] = React.useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    setPass(event.target.value);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n        color={\"secondary\"}\n        size=\"small\"\n      >\n        重置\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"PWD\"\n            type=\"email\"\n            fullWidth\n            onChange={handleChange}\n            helperText={errMsg}\n            error={errMsg !== \"\"}\n            onClick={() => {\n              setErrorMsg(\"\");\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" size=\"small\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              updatePass({ variables: { id: props.id, pass } });\n            }}\n            color=\"secondary\"\n            size=\"small\"\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nfunction VoteStatus(props) {\n  const { isCandidate, isDropout } = props;\n\n  return (\n    <>\n      {isCandidate === true && isDropout === false && (\n         <img  src={voteLogo} style={{height:30, width:30}}/>\n      )}\n      {isCandidate === true && isDropout === true && (\n        <span span aria-label=\"paw\" style={{ fontSize: 30, marginLeft: 5 }}>\n          🚫\n        </span>\n      )}\n\n      {isCandidate === null && (\n        <span span aria-label=\"paw\" style={{ fontSize: 30, marginLeft: 5 }}>\n          🤔\n        </span>\n      )}\n    </>\n  );\n}\n\nfunction CollapseSell(props) {\n  const [setDie] = useMutation(SET_DIE_STATUS);\n  const [setChiefId] = useMutation(SET_CHIEF_ID);\n  const [setVoteWeightedId] = useMutation(SET_VOTE_WEIGHTED_ID);\n  const [resetChiefCandidate] = useMutation(RESET_CHIEF_CANDIDATE);\n  const row = props.row;\n  const [openDetail, setOpenDetail] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpenDetail(!openDetail)}\n          >\n            {openDetail ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell>\n          {row.id === 0 || props.chiefId >= 0 ? (\n            <Checkbox\n              onChange={(e) => {\n                setChiefId({ variables: { id: row.id } });\n              }}\n              checked={row.isChief}\n              color=\"secondary\"\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n              \n            />\n          ) : (\n            row.chiefVoteState && (\n              <VoteStatus\n                isCandidate={row.chiefVoteState.isCandidate}\n                isDropout={row.chiefVoteState.isDropout}\n              />\n            )\n          )}\n\n      \n        </TableCell>\n        <TableCell>\n          {row.id ? (\n            <Checkbox\n              onChange={(e) => {\n                setDie({ variables: { id: row.id } });\n              }}\n              checked={row.isDie}\n              color=\"secondary\"\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            />\n          ) : null}\n        </TableCell>\n        <TableCell>\n          <Checkbox\n            onChange={(e) => {\n              //setChiefId({variables:{id:row.id}});\n              setVoteWeightedId({ variables: { id: row.id } });\n            }}\n            checked={row.id === props.voteWeightedId}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n          />\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.id}\n        </TableCell>\n        <TableCell align=\"right\">{row.name}</TableCell>\n        <TableCell align=\"right\">{row.roleName}</TableCell>\n        <TableCell align=\"right\">{row.votedNumber}</TableCell>\n        <TableCell align=\"right\">{row.chiefVote.toString()}</TableCell>\n        <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n        <TableCell align=\"right\">\n          <span\n            style={{\n              color: row.isEmpty\n                ? \"gray\"\n                : row.isVoteFinish\n                ? \"lightgreen\"\n                : \"orange\",\n              transition: \"all .3s ease\",\n              fontSize: \"24px\",\n              marginRight: \"10px\",\n            }}\n          >\n            &#x25cf;\n          </span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <Collapse in={openDetail} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              進階\n            </Typography>\n\n            <Table size=\"small\" aria-label=\"purchases\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">密碼 </TableCell>\n                  <TableCell align=\"center\">上警 </TableCell>\n                  <TableCell align=\"center\">退水 </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell align=\"center\">{row.pass || \"\"}</TableCell>\n                  <TableCell align=\"center\">\n                    {row.chiefVoteState.isCandidate ? \"Y\" : \"N\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {row.chiefVoteState.isDropout ? \"Y\" : \"N\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell align=\"center\">\n                    <FormDialog id={row.id} />\n                  </TableCell>\n\n                  <TableCell align=\"center\" colSpan={2}>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={() => {\n                        resetChiefCandidate({ variables: { id: row.id } });\n                      }}\n                      color={\"secondary\"}\n                      size=\"small\"\n                    >\n                      重置\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Box>\n        </Collapse>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nexport default function PlayerTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>警長</TableCell>\n            <TableCell>死亡</TableCell>\n            <TableCell>放逐加權</TableCell>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"left\">玩家</TableCell>\n            <TableCell align=\"right\">角色</TableCell>\n            <TableCell align=\"right\">投票</TableCell>\n            <TableCell align=\"center\">警長</TableCell>\n            <TableCell align=\"center\">放逐</TableCell>\n            <TableCell align=\"right\">上線</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <CollapseSell {...props} row={row} key={row.id} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 750,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst SET_DARK_DIE_STATUS = gql`\n  mutation SetDarkDieStatus($targets: [Int]!) {\n    setDarkDieStatus(targets: $targets)\n  }\n`;\n\nconst SET_DIE_STATUS = gql`\n  mutation SetDieStatus($id: Int!) {\n    setDieStatus(id: $id)\n  }\n`;\nconst SET_CHIEF_ID = gql`\n  mutation SetChiefId($id: Int!) {\n    setChiefId(id: $id)\n  }\n`;\n\nconst SET_VOTE_WEIGHTED_ID = gql`\nmutation SetVoteWeightedId($id: Int!) {\n  setVoteWeightedId(id: $id)\n}\n`\n\nexport default function PlayerTable(props) {\n  const classes = useStyles();\n\n  const [idSet, setIdSet] = useState(new Set());\n\n  const [setDie] = useMutation(SET_DARK_DIE_STATUS);\n  const [setChiefId] = useMutation(SET_CHIEF_ID);\n  const [setVoteWeightedId] = useMutation(SET_VOTE_WEIGHTED_ID);\n  return (\n    <>\n      <Box display=\"flex\">\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n          setDie({variables:{targets:[...idSet]}});\n        }}>\n          確認死亡\n        </Button>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>警長</TableCell>\n              <TableCell>死亡</TableCell>\n              <TableCell>放逐加權</TableCell>\n              <TableCell>ID</TableCell>\n\n              <TableCell align=\"left\">玩家</TableCell>\n              <TableCell align=\"right\">角色</TableCell>\n              <TableCell align=\"right\">投票</TableCell>\n              <TableCell align=\"center\">警長</TableCell>\n              <TableCell align=\"center\">放逐</TableCell>\n              <TableCell align=\"right\">上線</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.data.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>\n                  <Checkbox\n                    disabled\n                    onChange={(e) => {\n                      setChiefId({ variables: { id: row.id } });\n                    }}\n                    checked={row.id === props.chiefId}\n                    color=\"primary\"\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </TableCell>\n                <TableCell>\n                  {row.id ? (\n                    <Checkbox\n                      onChange={(e) => {\n                        const newSet = new Set(idSet);\n                        if (idSet.has(row.id)) {\n                          newSet.delete(row.id);\n                        } else {\n                          newSet.add(row.id);\n                        }\n\n                        setIdSet(newSet);\n                        //setDie({variables:{id:row.id}});\n                      }}\n                      checked={row.isDie || idSet.has(row.id)}\n                      disabled={row.isDie}\n                      color=\"primary\"\n                      inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                    />\n                  ) : null}\n                </TableCell>\n                <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    //setChiefId({variables:{id:row.id}});\n                    setVoteWeightedId({variables:{id:row.id}});\n                  }}\n                  checked={row.id === props.voteWeightedId}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />\n              </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"right\">{row.name}</TableCell>\n                <TableCell align=\"right\">{row.roleName}</TableCell>\n                <TableCell align=\"right\">{row.votedNumber}</TableCell>\n                <TableCell align=\"right\">{row.chiefVote.toString()}</TableCell>\n                <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n                <TableCell align=\"right\">\n                  <span\n                    style={{\n                      color: row.isEmpty\n                        ? \"gray\"\n                        : row.isVoteFinish\n                        ? \"lightgreen\"\n                        : \"orange\",\n                      transition: \"all .3s ease\",\n                      fontSize: \"24px\",\n                      marginRight: \"10px\",\n                    }}\n                  >\n                    &#x25cf;\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport { useQuery, useMutation , useLazyQuery} from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      number\n    }\n    players {\n      id\n      name\n      roleName\n      isEmpty\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\n//if the number = 0 will not show\n//caculate the total number\nfunction processData(data) {\n  let total = 0;\n\n  const result = [];\n\n  data.forEach((d) => {\n    const { number } = d;\n    if (number) {\n      total += number;\n      result.push(d);\n    }\n  });\n  return { total, data: result };\n}\n\nfunction BaseTable(props) {\n  const classes = useStyles();\n\n \n  \n  const { total, data } = processData(props.data);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>角色</TableCell>\n\n            <TableCell align=\"right\">人數</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <React.Fragment key={row.name}>\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.number}</TableCell>\n              </TableRow>\n              {row.players ? (\n                <TableRow align=\"left\">\n                  {row.players.map((v,idx) => (\n                    <div style={{ fontSize: 22, marginLeft:45 }} key={idx}>{`${v.id} : ${v.name}`}</div>\n                  ))}\n                </TableRow>\n              ) : null}\n           </React.Fragment>\n          ))}\n          <TableRow>\n            <TableCell align=\"right\">總人數</TableCell>\n            <TableCell align=\"right\">{total}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction RoleTable(props) {\n\n  return <BaseTable data={props.data} />;\n\n  /*\n  const { variables, query, pollInterval } = props;\n\n  \n  const [queryData,{ loading, error, data: rawData, called}] = useLazyQuery(query, {\n    //fetchPolicy:\"network-only\",\n    variables,\n    //pollInterval\n  });\n\n\n  let isMounted = true;\n useEffect(() => {\n   if (isMounted) {\n     queryData();\n   }\n\n   const interval = setInterval(() => {\n     if (isMounted) {\n       queryData();\n     }\n   }, 500);\n\n   return () => {\n     clearInterval(interval);\n     isMounted = false;\n   };\n }, []);\n\n  if (!called || !rawData) {\n    return <div>Loading</div>;\n  }\n\n  const data = props.parseData(rawData);\n\n  console.log(data, variables, query, rawData);\n\n  return <BaseTable data={data} />;\n  */\n}\n\nexport { RoleTable, BaseTable };\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\n\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      \n    }\n    \n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function AddRole(props) {\n  const classes = useStyles();\n  const [roleId, setRoleId] = React.useState(-1);\n  const [roleNumber, setRoleNumber] = React.useState(0);\n  const { loading, error, data } = useQuery(GET_ROLES);\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  console.log(data)\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={data.roles.filter((d) => d.id > 0)}\n        getOptionLabel={(option) => option.name}\n        style={{ width: 300 }}\n        onChange={handleRoleChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"角色\"\n            variant=\"outlined\"\n            margin=\"dense\"\n          />\n        )}\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"人數\"\n        variant=\"outlined\"\n        className={classes.margin}\n        margin=\"dense\"\n        type=\"number\"\n        value={roleNumber}\n        onChange={(e) => setRoleNumber(e.target.value)}\n      />\n      <div style={{ marginTop: 5 }}>\n        <Fab\n          size=\"medium\"\n          color=\"secondary\"\n          aria-label=\"add\"\n          size=\"small\"\n          onClick={() => {\n            props.updateRoleNumber({\n              id: roleId,\n              number: parseInt(roleNumber),\n            });\n            /*\n            updateRoleNumber({\n              variables: { id: roleId, number: parseInt(roleNumber) },\n            });\n            */\n          }}\n        >\n          <SaveIcon />\n        </Fab>\n      </div>\n    </div>\n  );\n}\n","export default {\n    CARD: 'card',\n  }","import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move',\n}\nconst Card = ({ id, text, index, moveCard }) => {\n  const ref = useRef(null)\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n  return (\n    <div ref={ref} style={{ ...style, opacity }}>\n      {text}\n    </div>\n  )\n}\nexport default Card","import React, { useState, useCallback } from \"react\";\nimport Card from \"./Card\";\nimport update from \"immutability-helper\";\nconst style = {\n  width: 400,\n};\nconst Container = (props) => {\n  {\n    const [cards, setCards] = useState([...props.data]);\n    const moveCard = useCallback(\n      (dragIndex, hoverIndex) => {\n        const dragCard = cards[dragIndex];\n        const newCards = update(cards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ],\n        });\n        setCards(newCards);\n\n        props.onUpdate(newCards)\n      },\n      [cards]\n    );\n    const renderCard = (card, index) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          moveCard={moveCard}\n        />\n      );\n    };\n    return (\n      <>\n        <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n      </>\n    );\n  }\n};\nexport default Container;\n","import React, { useEffect } from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport AddRole from \"./AddRole\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DragBox from \"../src/drag/Container\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\n\nconst GET_TEMPLATE = gql`\n  query GetTemplate($name: String!) {\n    template(name: $name) {\n      roles {\n        name\n        number\n        id\n      }\n      description\n    }\n  }\n`;\n\nconst UPDATE_ROLE_NUMBER = gql`\n  mutation UpdateTempl($roleId: Int!, $number: Int!, $name: String!) {\n    updateTemplateRole(name: $name, number: $number, roleId: $roleId)\n  }\n`;\n\nconst UPDATE_RULE = gql`\n  mutation UpdateRule($name: String!, $description: String!) {\n    updateTemplateDescription(name: $name, description: $description)\n  }\n`;\n\nconst UPDATE_ROLE_PRIORITY = gql`\n  mutation UpdateRolePriority($name: String!, $ids: [Int]!) {\n    updateTemplateRolePriority(name: $name, ids: $ids)\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst convertToDragData = (data) => {\n  const result = [];\n  data.forEach((d) => {\n    const { name, id } = d;\n    result.push({ id, text: name });\n  });\n  return result;\n};\n\nfunction EditDarkPriority(props) {\n  const { name } = props;\n\n  const [priorityList, setPrioritylist] = React.useState([]);\n  const [orgPriorityList, setOrgPriorityList] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [geTemplate, { loading, error, data, called }] = useLazyQuery(\n    GET_TEMPLATE,\n    { fetchPolicy: \"network-only\" }\n\n    /*\n    onCompleted: (res) => {\n      console.log(\"complete\", res);\n      const idData = convertToDragData(res.template.roles);\n      //setPrioritylist(idData.map((v) => v.id));\n      //setOrgPriorityList(idData.map((v) => v.id));\n    },\n    */\n  );\n\n  console.log(data);\n  const [updateRolePriority, res] = useMutation(UPDATE_ROLE_PRIORITY, {\n    onCompleted: () => {\n      //refetch();\n      console.log(\"update dark\");\n      geTemplate({ variables: { name } });\n    },\n  });\n\n  React.useEffect(() => {\n    geTemplate({ variables: { name } });\n  }, []);\n\n  React.useEffect(() => {\n    if (!loading && called) {\n      const idData = convertToDragData(data.template.roles);\n      setPrioritylist(idData.map((v) => v.id));\n      setOrgPriorityList(idData.map((v) => v.id));\n    }\n  }, [data]);\n\n  if (!called || loading) {\n    return <div>Loading</div>;\n  }\n\n  const dragData = convertToDragData(data.template.roles);\n\n  return (\n    <DndProvider backend={Backend}>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          updateRolePriority({ variables: { name, ids: priorityList } });\n        }}\n        color={\n          orgPriorityList.toString() === priorityList.toString()\n            ? \"primary\"\n            : \"secondary\"\n        }\n      >\n        <SaveIcon />\n      </IconButton>\n      <DragBox\n        data={dragData}\n        onUpdate={(data) => {\n          console.log(\"update view\");\n          setPrioritylist(data.map((v) => v.id));\n        }}\n      />\n    </DndProvider>\n  );\n}\n\nfunction EditRole(props) {\n  const { name, data } = props;\n  const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  React.useEffect(() => {\n    console.log(\"mount\" + name);\n\n    return () => {\n      console.log(\"umount\" + name);\n    };\n  }, []);\n\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>\n        {name}\n      </Typography>\n      <AddRole\n        updateRoleNumber={({ id: roleId, number }) => {\n          console.log(roleId, name);\n          updateRoleNumber({ variables: { roleId, name, number } });\n        }}\n      />\n\n      <RoleTable data={data} />\n\n      {/*<RoleTable\n        data={data}\n        query={GET_TEMPLATE}\n        variables={{ name }}\n        parseData={(d) => {\n            console.log(d)\n          return d.template.roles;\n        }}\n        pollInterval={500}\n      />*/}\n    </div>\n  );\n}\n\nfunction EditRuleCore(props) {\n  const [value, setValue] = React.useState(props.value);\n  return (\n    <div>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          props.updateRule({\n            variables: { description: value, name: props.name },\n          });\n        }}\n        color={value === props.value ? \"primary\" : \"secondary\"}\n      >\n        <SaveIcon />\n      </IconButton>\n      <TextField\n        id=\"outlined-multiline-static\"\n        multiline\n        rows={4}\n        fullWidth\n        value={value}\n        variant=\"outlined\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </div>\n  );\n}\n\nfunction EditRule(props) {\n  const { name } = props;\n\n  const { loading, error, data, refetch } = useQuery(GET_TEMPLATE, {\n    variables: { name },\n  });\n\n  const [updateRule, ruleResult] = useMutation(UPDATE_RULE, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <EditRuleCore\n      value={data.template.description}\n      updateRule={updateRule}\n      name={name}\n    />\n  );\n}\n\nexport default function EditTemplate(props) {\n  const { name, data } = props;\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper square>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n      >\n        <Tab label=\"角色\" />\n        <Tab label=\"規則\" />\n        <Tab label=\"黑夜順序\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <EditRole name={name} data={data} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <EditRule name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <EditDarkPriority name={name} />\n      </TabPanel>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery} from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddRole from \"./AddRole\";\nimport EditTemplateRole from \"./EditTemplateRole\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Box from \"@material-ui/core/Box\";\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst GET_TEMPLATES = gql`\n  {\n    templates {\n      isEnabled\n      name\n    }\n  }\n`;\n\nconst ADD_TEMPLATE = gql`\n  mutation addTemplate($name: String!) {\n    addNewTemplate(name: $name)\n  }\n`;\n\nconst DELETE_TEMPLATE = gql`\n  mutation DeleteTemplate($name: String!) {\n    deleteTemplate(name: $name)\n  }\n`;\n\nconst ENABLE_TEMPLATE = gql`\n  mutation EnableTemplate($name: String!) {\n    enableTemplate(name: $name)\n  }\n`;\n\nfunction TemplateControl(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>選擇</TableCell>\n            <TableCell align=\"left\">遊戲模式</TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>編輯</div>\n            </TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>刪除</div>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      props.onSelect(row.name);\n                    }\n                  }}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  checked={row.isEnabled}\n                />\n              </TableCell>\n              <TableCell align=\"left\">{row.name}</TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    console.log(row.name);\n                    props.onEdit(row.name);\n                  }}\n                  disabled={!row.isEnabled}\n                >\n                  <CreateIcon />\n                </IconButton>\n              </TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    //props.onEdit(row.name);\n                    props.onDelete(row.name);\n                  }}\n                  disabled={row.isEnabled}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction TemplateTable(props) {\n  const classes = useStyles();\n  \n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [name, setName] = React.useState(\"\");\n  const [isBusy, setIsBusy] = React.useState(false);\n\n\n  /*\n  const [getTemplate ,{ loading, error, data, stopPolling, startPolling, called }] = useLazyQuery(\n    GET_TEMPLATES\n  );\n    */\n\n\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n\n      /*\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n      */\n    },\n  });\n\n\n  /*\n  React.useEffect(() => {\n    //startPolling(500); // will be called only once\n    return stopPolling; // just return cleanup function without making new one\n  }, []);\n\n  if (loading ) {\n    return <div>Loading</div>;\n  }\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n  */\n \n\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"模式名稱\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n\n        <div style={{ marginTop: 5 }}>\n          <Fab\n            size=\"medium\"\n            color=\"secondary\"\n            aria-label=\"add\"\n            size=\"small\"\n            onClick={() => {\n              addTemplate({ variables: { name } });\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </div>\n      </div>\n      <Container maxWidth=\"sm\">\n        <TemplateControl\n          data={props.data.templates}\n          onEdit={(name) => {\n            props.setEditName(name);\n          }}\n          onSelect={(name) => {\n            enableTemplate({ variables: { name } });\n            //stopPolling();\n          }}\n          onDelete={(name) => {\n            deleteTemplate({ variables: { name } });\n          }}\n        />\n        </Container>\n    </div>\n  );\n}\n\nexport default function Admin(props) {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"\");\n  const [editName, setEditName] = React.useState(\"\");\n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [isBusy, setIsBusy] = React.useState(false);\n\n  console.log()\n\n  /*\n  const { loading, error, data, stopPolling, startPolling, called } = useQuery(\n    GET_TEMPLATES,\n    {\n      pollInterval: 500,\n      //notifyOnNetworkStatusChange:true\n    }\n  );\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n    },\n  });\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n  */\n\n  if (editName) {\n    return (\n      <div>\n        <Box display=\"flex\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              setEditName(\"\");\n            }}\n          >\n            退出\n          </Button>\n        </Box>\n        <EditTemplateRole name={editName} data={props.data}/>\n      </div>\n    );\n  }\n\n  return (\n    <TemplateTable setEditName={name=>{setEditName(name)}} data={props.tData}/>\n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\n//import RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {BaseTable as BaseRoleTable} from \"./RoleTable\";\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n  }\n`;\n\n\n\nexport default function EnabledTemplate(props) {\n\n  /*\n    const { loading, error, data } = useQuery(GET_ENABLED_TEMPLATE, {\n      fetchPolicy: \"network-only\",\n    });\n  \n    if (loading) {\n      return <div>Loading</div>;\n    }\n  \n   */\n    const { name, description ,roles} = props.data.enabledTemplate;\n\n    \n    return (\n      <div>\n        <Typography variant=\"h2\" gutterBottom>\n          {name}\n        </Typography>\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          rows={6}\n          fullWidth\n          value={description || \"\"}\n          variant=\"outlined\"\n          label=\"規則\"\n          disabled\n          \n        />\n       <BaseRoleTable data={roles}/>\n      </div>\n    );\n  }\n\n\n\n","import React, { useEffect } from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport DarkPlayerTable from \"./DarkPlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Badge from \"@material-ui/core/Badge\";\nimport voteLogo from \"./ballot-box-with-ballot.png\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport HowToVoteIcon from \"@material-ui/icons/HowToVote\";\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nconst GET_ROLES = gql`\n  {\n    templates {\n      isEnabled\n      name\n    }\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n    players {\n      pass\n      isTarget\n      id\n      name\n      roleName\n      vote\n      chiefVote\n      isEmpty\n      isDie\n      isVoteFinish\n      votedNumber\n      isChief\n      chiefVoteState {\n        isDropout\n        isCandidate\n        type\n      }\n    }\n    gameInfo(id: 0) {\n      isVoteFinish\n      chiefId\n      isDark\n      voteWeightedId\n      hasVoteTarget\n      hasChief\n      isChiefCandidateConfirmed\n      repeatTimes\n      isEventBusy\n    }\n  }\n`;\n\nconst RESET_EVENT = gql`\n  mutation ResetEvent {\n    resetEvent\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst GENERATE_TEMPLATE_ROLE = gql`\n  mutation GenerateTemplateRole($isCovertWolfToHuman: Boolean!) {\n    generateTemplateRole(isCovertWolfToHuman: $isCovertWolfToHuman)\n  }\n`;\n\nconst GENERATE_TEMPLATE_PLAYER = gql`\n  mutation GenerateTemplatePlayer {\n    generateTemplatePlayer\n  }\n`;\n\nconst REMOVE_ALL_PLAYER = gql`\n  mutation RemoveAllPlayer {\n    removeAllPlayer\n  }\n`;\n//enableTemplate(name:\"777\")\n\nconst VOTE_START = gql`\n  mutation VoteStart($targets: [Int]) {\n    voteStart(targets: $targets)\n  }\n`;\n\nconst VOTE_CHIEF_START = gql`\n  mutation VoteChiefStart {\n    voteChiefStart\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  repeatTimes: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst parseData = (data) => {\n  const playerGroup = {};\n\n  data.players.forEach((p) => {\n    const { roleName, name, id } = p;\n    if (playerGroup[roleName]) {\n      playerGroup[roleName].push({ name: name || \"\", id });\n    } else {\n      playerGroup[roleName] = [{ name: name || \"\", id }];\n    }\n  });\n\n  const result = [];\n\n  data.enabledTemplate.roles.forEach((r) => {\n    const { name } = r;\n    result.push({ ...r, players: playerGroup[name] });\n  });\n\n  return result;\n};\n\nfunction TemplateRoleTable(props) {\n  return <RoleTable data={props.data} />;\n\n  /*\n  return (\n    <RoleTable\n\n      query={GET_ENABLED_TEMPLATE}\n      variables={{}}\n      parseData={(data) => {\n        const playerGroup = {};\n\n        data.players.forEach((p) => {\n          const { roleName, name, id } = p;\n          if (playerGroup[roleName]) {\n            playerGroup[roleName].push({ name: name || \"\", id });\n          } else {\n            playerGroup[roleName] = [{ name: name || \"\", id }];\n          }\n        });\n\n        console.log(playerGroup);\n\n        const result = [];\n\n        data.enabledTemplate.roles.forEach((r) => {\n          console.log(\"r\", r);\n\n          const { name } = r;\n          result.push({ ...r, players: playerGroup[name] });\n        });\n\n        console.log(result);\n\n        return result;\n      }}\n      pollInterval={500}\n    />\n  );\n  */\n}\n\nfunction VoteAction(props) {\n  const [targetList, setTargetList] = React.useState([]);\n  const [voteStart] = useMutation(\n    props.hasChief || props.hasVoteTarget ? VOTE_START : VOTE_CHIEF_START,\n    {\n      onCompleted: () => {\n        props.onClose();\n      },\n    }\n  );\n  //const [submitVote, { called }] = useMutation(SUBMIT_VOTE);\n\n  const isLock = props.hasTarget || props.hasChief;\n\n  return (\n    <>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          {`${\n            props.hasChief ? `請選擇放逐的目標` : `請選擇警長候選人`\n          }, 目標必須多於一人, 投票人數也必須多於一人`}\n        </DialogContentText>\n        {props.players\n          .filter((p) => {\n            if (props.hasVoteTarget) {\n              return p.isTarget;\n            } else if (!props.hasChief) {\n              return (\n                p.chiefVoteState.isCandidate && !p.chiefVoteState.isDropout\n              );\n            }\n\n            return !p.isDie && p.id !== 0;\n          })\n          .map((player) => (\n            <div key={player.id}>\n              <Radio\n                checked={targetList.includes(player.id)}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  if (\n                    !targetList.includes(player.id) &&\n                    targetList.length + 1 !==\n                      props.players.filter((p) => !p.isDie && p.id !== 0).length\n                  ) {\n                    setTargetList([...targetList, player.id]);\n                  }\n                }}\n              />\n              {` ${player.id} : ${player.name || \"\"}`}\n            </div>\n          ))}\n        <Radio\n          checked={targetList.length === 0}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            if (!isLock) {\n              setTargetList([]);\n            }\n          }}\n        />\n        {`所有人`}\n      </DialogContent>\n      <DialogActions>\n        {(targetList.length === 0 || targetList.length > 1) && (\n          <Button\n            onClick={() => {\n              voteStart({ variables: { targets: targetList } });\n              //submitVote({variables:{id:props.id, target}})\n            }}\n            color=\"primary\"\n          >\n            確認\n          </Button>\n        )}\n      </DialogActions>\n    </>\n  );\n}\n\nfunction Game(props) {\n  const { gameInfo } = props;\n  const classes = useStyles();\n\n  const [resetEvent] = useMutation(RESET_EVENT);\n\n  const [generateRole] = useMutation(GENERATE_TEMPLATE_ROLE);\n  const [generatePlayer] = useMutation(GENERATE_TEMPLATE_PLAYER);\n  const [removeAllPlayer] = useMutation(REMOVE_ALL_PLAYER);\n  const [voteStart] = useMutation(VOTE_START);\n  //const [roleId, setRoleId] = React.useState(-1);\n  //const [roleNumber, setRoleNumber] = React.useState(0);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name || \"\");\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n  const [state, setState] = React.useState({\n    isCovertWolfToHuman: false,\n  });\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: 0, name: value },\n      });\n    }\n  }, [value]);\n  /*\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n  */\n\n  const hasChief = props.chiefId !== -1;\n\n  if (props.isPlayerMode) {\n    if (props.isDark) {\n      return (\n        <DarkPlayerTable\n          data={props.players}\n          chiefId={props.chiefId}\n          voteWeightedId={props.voteWeightedId}\n        />\n      );\n    }\n\n    return (\n      <>\n        <Dialog\n          aria-labelledby=\"simple-dialog-title\"\n          open={isOpen}\n          onClose={() => {\n            setIsOpen(false);\n          }}\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            {hasChief ? `放逐開始` : `競選警長`}\n          </DialogTitle>\n          <VoteAction\n            players={props.players}\n            onClose={() => {\n              setIsOpen(false);\n            }}\n            hasChief={hasChief}\n            hasVoteTarget={props.hasVoteTarget}\n          />\n        </Dialog>\n        <Box display=\"flex\">\n          <Tooltip title=\"產生角色\" placement=\"top\">\n            <IconButton\n              aria-label=\"delete\"\n              onClick={() => {\n                generateRole({\n                  variables: { isCovertWolfToHuman: state.isCovertWolfToHuman },\n                });\n              }}\n            >\n              <PeopleAltIcon fontSize=\"large\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"刪除玩家\" placement=\"top\">\n            <IconButton\n              aria-label=\"delete\"\n              onClick={() => {\n                removeAllPlayer();\n              }}\n            >\n              <PersonAddDisabledIcon fontSize=\"large\" />\n            </IconButton>\n          </Tooltip>\n          {hasChief ? (\n            <Tooltip title=\"放逐投票\" placement=\"top\">\n              <IconButton aria-label=\"delete\" onClick={() => {\n                  //voteStart();\n                  setIsOpen(true);\n                }}>\n                <HowToVoteIcon fontSize=\"large\" />\n              </IconButton>\n            </Tooltip>\n          ) : (\n            <Tooltip title=\"警長選舉\" placement=\"top\">\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => {\n                  //voteStart();\n                  setIsOpen(true);\n                }}\n              >\n                <Badge\n                  badgeContent={\n                    gameInfo.repeatTimes + 1 === 1\n                      ? 0\n                      : gameInfo.repeatTimes + 1\n                  }\n                  color=\"primary\"\n                >\n                  <ContactMailIcon fontSize=\"large\" />\n                </Badge>\n              </IconButton>\n            </Tooltip>\n          )}\n\n          <Tooltip title=\"重置選舉\" placement=\"top\">\n            <IconButton\n             disabled={gameInfo.repeatTimes === 0 && !gameInfo.isEventBusy}\n              aria-label=\"delete\"\n              onClick={() => {\n                resetEvent();\n              }}\n            >\n              <UndoIcon fontSize=\"large\" />\n            </IconButton>\n          </Tooltip>\n          {/*<Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => {\n              generateRole({\n                variables: { isCovertWolfToHuman: state.isCovertWolfToHuman },\n              });\n            }}\n          >\n            <div style={{ fontWeight: 800 }}>產生角色</div>\n          </Button>*/}\n\n          {/*<Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              removeAllPlayer();\n            }}\n          >\n            <div style={{ fontWeight: 800 }}>刪除玩家</div>\n          </Button>*/}\n\n          {/*<Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              //voteStart();\n              setIsOpen(true);\n            }}\n            disabled={gameInfo.isChiefCandidateConfirmed === false}\n            endIcon={\n              <Badge\n                badgeContent={\n                  gameInfo.repeatTimes + 1 === 1 ? 0 : gameInfo.repeatTimes + 1\n                }\n                color=\"primary\"\n              >\n                <Avatar className={classes.repeatTimes}>\n                  <img src={voteLogo} style={{ height: 20, width: 20 }} />\n                </Avatar>\n              </Badge>\n            }\n          >\n            {hasChief ? `放逐` : `警長`}\n          </Button>*/}\n\n          {/*<Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={gameInfo.repeatTimes === 0 && !gameInfo.isEventBusy}\n            onClick={() => {\n              resetEvent();\n            }}\n          >\n            重置選舉\n          </Button>*/}\n        </Box>\n        <Box display=\"flex\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.isCovertWolfToHuman}\n                onChange={handleChange}\n                name=\"isCovertWolfToHuman\"\n              />\n            }\n            label=\"轉化狼人變成人類\"\n          />\n        </Box>\n        <Box display=\"flex\">\n          <TextField\n            autoComplete=\"off\"\n            color=\"secondary\"\n            id=\"standard-basic\"\n            label=\"姓名\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            value={name}\n            onChange={(e) => {\n              setValue(e.target.value);\n              setName(e.target.value);\n            }}\n          />\n        </Box>\n        <PlayerTable\n          data={props.players}\n          chiefId={props.chiefId}\n          voteWeightedId={props.voteWeightedId}\n        />\n      </>\n    );\n  }\n\n  return (\n    <div style={{}}>\n      <Box display=\"flex\">\n\n      <Tooltip title=\"加入玩家\" placement=\"top\">\n              <IconButton aria-label=\"delete\" onClick={() => {\n                  //voteStart();\n                  generatePlayer();\n                }}>\n                <PersonAddIcon fontSize=\"large\" />\n              </IconButton>\n            </Tooltip>\n\n\n        {/*<Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            generatePlayer();\n          }}\n        >\n          加入玩家\n        </Button>*/}\n      </Box>\n\n      <EnabedTemplateInfo data={props.data} />\n    </div>\n  );\n}\n\nexport default function God(props) {\n  const history = useHistory();\n  const [value, setValue] = React.useState(0);\n  const [getRole, { loading, data, error, called }] = useLazyQuery(GET_ROLES, {\n    fetchPolicy: \"network-only\",\n  });\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      getRole();\n    }\n\n    const interval = setInterval(() => {\n      if (isMounted) {\n        getRole();\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (error && !loading) {\n      error.graphQLErrors.forEach((e) => {\n        const { extensions } = e;\n        if (extensions.code === \"UNAUTHENTICATED\") {\n          console.log(\"no access!!!\");\n          history.push(\"/\");\n        }\n      });\n\n      console.log(\"set dark\");\n\n      if (data && data.gameInfo.isDark) {\n        props.setDarkMode(true);\n      }\n    }\n  }, [error, loading, data]);\n\n  React.useEffect(() => {\n    if (data) {\n      props.setDarkMode(data.gameInfo.isDark);\n    }\n  }, [data]);\n\n  if (!called || !data) {\n    return <div>Loading</div>;\n  }\n\n  const { id, pass, name } = props;\n\n  const isPlayerMode = data.players.length > 1 ? true : false;\n  console.log(data);\n  return (\n    <Container maxWidth={isPlayerMode && value === 0 ? \"lg\" : \"sm\"}>\n      <Paper elevation={3}>\n        <Tabs\n          value={value}\n          indicatorColor=\"secondary\"\n          textColor=\"secondary\"\n          onChange={handleChange}\n          aria-label=\"disabled tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"遊戲\" />\n          <Tab label={isPlayerMode ? \"黑夜視野\" : \"模式選擇\"} />\n          {isPlayerMode && <Tab label=\"模式\" />}\n        </Tabs>\n        <TabPanel value={value} index={0}>\n          <Game\n            isPlayerMode={isPlayerMode}\n            id={id}\n            pass={pass}\n            name={name}\n            players={data.players}\n            chiefId={data.gameInfo.chiefId}\n            isDark={data.gameInfo.isDark}\n            voteWeightedId={data.gameInfo.voteWeightedId}\n            gameInfo={data.gameInfo}\n            data={data}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          {isPlayerMode ? (\n            <TemplateRoleTable data={parseData(data)} />\n          ) : (\n            <Admin data={parseData(data)} tData={data} />\n          )}\n        </TabPanel>\n\n        {isPlayerMode && (\n          <TabPanel value={value} index={2}>\n            <EnabedTemplateInfo data={data} />\n          </TabPanel>\n        )}\n      </Paper>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport ReactCardFlip from \"react-card-flip\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Avatar from \"react-avatar\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport BlockIcon from '@material-ui/icons/Block';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\n\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\nimport { useHistory } from \"react-router-dom\";\nimport { ReactSVG } from \"react-svg\";\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYER_INFO = gql`\n  query GetPlayer($id: Int!, $pass: String!) {\n    player(id: $id, pass: $pass) {\n      id\n      name\n      roleName\n    }\n    players {\n      id\n      name\n      isEmpty\n      revealedRole\n      isChief\n      isDie\n      vote\n      chiefVote\n      isValidCandidate\n      isVoteFinish\n      chiefVoteState {\n        isDropout\n        isCandidate\n      }\n    }\n\n    gameInfo(id: $id) {\n      uuid\n      isVoteFinish\n      chiefId\n      isDark\n      isChiefCandidateConfirmed\n      chiefVoteState {\n        isDropout\n        isCandidate\n      }\n    }\n  }\n`;\n\nconst SUBMIT_VOTE = gql`\n  mutation SubmitVote($target: Int!) {\n    submitVote(target: $target)\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst SUBMIT_CHIEF_CANDIDATE = gql`\n  mutation submitChiefCandidate {\n    setIsChiefCandidate\n  }\n`;\n\nconst SET_IS_VOTER = gql`\n  mutation setIsVoter {\n    setIsVoter\n  }\n`;\n\nconst DROP_OUT_CHIEF_CANDIDATE = gql`\n  mutation dropOutChiefCandidate {\n    setIsChiefDropOut\n  }\n`;\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n  }\n`;\n\nfunction ChiefIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M14.5,12.59l0.9,3.88L12,14.42l-3.4,2.05l0.9-3.87l-3-2.59l3.96-0.34L12,6.02l1.54,3.64L17.5,10L14.5,12.59z M12,3.19 l7,3.11V11c0,4.52-2.98,8.69-7,9.93C7.98,19.69,5,15.52,5,11V6.3L12,3.19 M12,1L3,5v6c0,5.55,3.84,10.74,9,12c5.16-1.26,9-6.45,9-12 V5L12,1L12,1z\" />\n    </SvgIcon>\n  );\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction PlayerTable(props) {\n  const classes = useStyles();\n  console.log(props.data);\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"center\">玩家</TableCell>\n            <TableCell align=\"center\">警長</TableCell>\n            <TableCell align=\"center\">放逐</TableCell>\n            <TableCell align=\"right\">狀態</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id === 0 ? (\n                  <div style={{ width: 30 }}>\n                    <ReactSVG src=\"infinity.svg\" />\n                  </div>\n                ) : row.isDie ? (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    🐾\n                  </span>\n                ) : (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    {row.id}\n                  </span>\n                )}\n                {row.id === props.chiefId && row.id !== 0 && (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    🌟\n                  </span>\n                )}\n                {row.chiefVoteState &&\n                  row.chiefVoteState.isCandidate === true &&\n                  row.chiefVoteState.isDropout === false && (\n                    <span\n                      span\n                      aria-label=\"paw\"\n                      style={{ fontSize: 30, marginLeft: 5 }}\n                    >\n                      🗳️\n                    </span>\n                  )}\n                {row.chiefVoteState &&\n                  row.chiefVoteState.isCandidate === true &&\n                  row.chiefVoteState.isDropout === true && (\n                    <span\n                      span\n                      aria-label=\"paw\"\n                      style={{ fontSize: 30, marginLeft: 5 }}\n                    >\n                      🚫\n                    </span>\n                  )}\n              </TableCell>\n              <TableCell align=\"center\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.chiefVote.toString()}</TableCell>\n              <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty\n                      ? \"gray\"\n                      : row.isVoteFinish\n                      ? \"lightgreen\"\n                      : \"orange\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction VoteAction(props) {\n  const [target, setTarget] = React.useState(-1);\n\n  const [submitVote, { called }] = useMutation(SUBMIT_VOTE);\n\n  return (\n    <>\n      <DialogContent>\n        {props.players\n          .filter((p) => p.isValidCandidate)\n          .map((player) => (\n            <div key={player.id}>\n              <Radio\n                checked={player.id === target}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  setTarget(player.id);\n                }}\n              />\n              {` ${player.id} : ${player.name || \"\"}`}\n            </div>\n          ))}\n        <Radio\n          checked={-1 === target}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            setTarget(-1);\n          }}\n        />\n        {`棄權`}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            submitVote({ variables: { target } });\n          }}\n          color=\"primary\"\n        >\n          確認\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction CandidateChiefDialog(props) {\n  const [setIsVoter] = useMutation(SET_IS_VOTER, {\n    onCompleted: () => {\n      props.onClose();\n    },\n  });\n\n  const [submitChiefCandidate] = useMutation(SUBMIT_CHIEF_CANDIDATE, {\n    onCompleted: () => {\n      props.onClose();\n    },\n  });\n\n  const [dropOutChiefCandidate] = useMutation(DROP_OUT_CHIEF_CANDIDATE, {\n    onCompleted: () => {\n      props.onClose();\n    },\n  });\n\n  return (\n    <>\n      {props.isCandidate ? (\n        <DialogTitle id=\"form-dialog-title\">是否退水？</DialogTitle>\n      ) : (\n        <DialogTitle id=\"form-dialog-title\">是否競選警長？</DialogTitle>\n      )}\n      <DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              if (props.isCandidate) {\n                dropOutChiefCandidate();\n              } else {\n                submitChiefCandidate();\n              }\n            }}\n            \n          >\n            <CheckIcon style={{color:'green'}}/>\n          </Button>\n          {!props.isCandidate && (\n            <Button\n              onClick={() => {\n                setIsVoter();\n              }}\n              \n            >\n             <CloseIcon style={{color:'red'}}/>\n            </Button>\n          )}\n          <Button\n            onClick={() => {\n              props.onClose();\n            }}\n            \n          >\n            <CancelIcon/>\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </>\n  );\n}\n\nfunction PlayerControl(props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [playerInfo, { loading, error, data, called: playerCalled }] =\n    useLazyQuery(GET_PLAYER_INFO, { fetchPolicy: \"network-only\" });\n\n  const [openChiefCandidate, setOpenChiefCandidate] = React.useState(false);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name);\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      playerInfo({ variables: { id: props.id, pass: props.pass } });\n    }\n\n    const interval = setInterval(() => {\n      if (isMounted) {\n        playerInfo({ variables: { id: props.id, pass: props.pass } });\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: props.id, name: value },\n      });\n    }\n\n    if (error && !loading) {\n      history.push(\"/\");\n    }\n\n    //audioEl.play()\n  }, [value, error, loading]);\n\n  React.useEffect(() => {\n    if (data) {\n      props.setDarkMode(data.gameInfo.isDark);\n    }\n  }, [data]);\n\n  const [roleName, setRoleName] = React.useState(\"\");\n  const uuid = data ? data.gameInfo.uuid : \"\";\n  const dataRoleName = data ? data.player.roleName : \"\";\n  React.useEffect(() => {\n    setRoleName(\"\");\n\n    if (data) {\n      console.log(data);\n      setTimeout(() => {\n        setRoleName(data.player.roleName);\n      }, 1000);\n    }\n\n    return () => {\n      setRoleName(\"\");\n    };\n  }, [uuid, dataRoleName]);\n\n  if (!playerCalled || !data) {\n    return <div>Loading</div>;\n  }\n\n  const hasChief = data.gameInfo.chiefId !== -1;\n  const { id, name: playerName } = data.player;\n  return (\n    <>\n      <Dialog\n        aria-labelledby=\"simple-dialog-title\"\n        open={!data.gameInfo.isVoteFinish}\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {hasChief ? `放逐玩家` : `選擇警長`}\n        </DialogTitle>\n        <VoteAction players={data.players} id={id} />\n      </Dialog>\n\n      {!hasChief && (\n        <Box display=\"flex\">\n          {data.gameInfo.chiefVoteState ? (\n            <>\n              <Dialog\n                aria-labelledby=\"simple-dialog-title\"\n                open={openChiefCandidate}\n              >\n                <CandidateChiefDialog\n                  onClose={() => {\n                    setOpenChiefCandidate(false);\n                  }}\n                  isCandidate={data.gameInfo.chiefVoteState.isCandidate}\n                />\n              </Dialog>\n              {data.gameInfo.chiefVoteState.isCandidate === true ? (\n               <Tooltip title=\"退水\" placement=\"top\">\n               <IconButton\n                 disabled={data.gameInfo.chiefVoteState.isDropout}\n                 aria-label=\"delete\"\n                 onClick={() => {\n                   setOpenChiefCandidate(true);\n                 }}\n               >\n                 <BlockIcon fontSize=\"large\"/>\n               </IconButton>\n             </Tooltip>\n              ) : (\n                <Tooltip title=\"競選警長\" placement=\"top\">\n                  <IconButton\n                    disabled={data.gameInfo.chiefVoteState.isCandidate !== null}\n                    aria-label=\"delete\"\n                    onClick={() => {\n                      setOpenChiefCandidate(true);\n                    }}\n                  >\n                    <ChiefIcon fontSize=\"large\"/>\n                  </IconButton>\n                </Tooltip>\n              )}\n            </>\n          ) : null}\n        </Box>\n      )}\n      <Box display=\"flex\">\n        <TextField\n          autoComplete=\"off\"\n          color=\"secondary\"\n          id=\"standard-basic\"\n          label=\"姓名\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => {\n            setValue(e.target.value);\n            setName(e.target.value);\n          }}\n        />\n      </Box>\n      <Card className={classes.root}>\n        <CardContent>\n          <ReactCardFlip\n            isFlipped={roleName ? true : false}\n            flipDirection=\"vertical\"\n          >\n            <Typography variant=\"h1\" component=\"h1\">\n              {\"❔\"}\n            </Typography>\n            <Typography variant=\"h2\" component=\"h2\">\n              {roleName || \"❔\"}\n            </Typography>\n          </ReactCardFlip>\n        </CardContent>\n      </Card>\n\n      <PlayerTable data={data.players} chiefId={data.gameInfo.chiefId} />\n    </>\n  );\n}\n\nfunction TemplateInfo() {\n  const { loading, error, data } = useQuery(GET_ENABLED_TEMPLATE, {\n    fetchPolicy: \"network-only\",\n  });\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return <EnabedTemplateInfo data={data} />;\n}\n\nexport default function Player(props) {\n  const { id, pass, name } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container maxWidth={\"sm\"}>\n      <Paper elevation={3}>\n        <Tabs\n          value={value}\n          indicatorColor=\"secondary\"\n          textColor=\"secondary\"\n          onChange={handleChange}\n          aria-label=\"disabled tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"玩家\" />\n          <Tab label=\"模式\" />\n        </Tabs>\n        <TabPanel value={value} index={0}>\n          <PlayerControl\n            id={id}\n            pass={pass}\n            name={name}\n            setDarkMode={props.setDarkMode}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <TemplateInfo />\n        </TabPanel>\n      </Paper>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { ReactSVG } from \"react-svg\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"react-avatar\";\nimport { mdiPaw } from \"@mdi/js\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {},\n  table: {\n    \n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    \n   marginTop:5\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      isEmpty\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      id\n    }\n  }\n`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nfunction Icon(props) {\n  return (\n    <svg viewBox=\"0 0 24 24\" style={{ width: \"1.5rem\", fill: \"white\" }}>\n      <path d={props.path} />\n    </svg>\n  );\n}\n\nexport default function Login() {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [playerId, setPlayerId] = React.useState(-1);\n  const [playerPass, setPlayerPass] = React.useState(\"\");\n  const [isValid, setIsValid] = React.useState(false);\n  const { loading, error, data, stopPolling, startPolling } = useQuery(\n    GET_PLAYERS,\n    {\n      //pollInterval: 500,\n      //fetchPolicy: \"network-only\",\n    }\n  );\n  console.log(mdiPaw);\n  const [updatePlayerPass, { loading: passLoading, data: passData }] =\n    useMutation(UPDATE_PLAYER_PASS, {\n      onCompleted: (data) => {\n        if (data.updatePlayerPass.isValid) {\n          history.push(\"/game\");\n        }\n      },\n    });\n\n  React.useEffect(() => {\n    startPolling(500);\n\n    return () => {\n      stopPolling();\n    };\n  }, []);\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <Container component=\"main\">\n      <div\n        style={{\n          width: 350,\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n        }}\n      >\n       \n        <Avatar src=\"wolf-girl.png\" size=\"350\" />\n       \n        <div style={{marginLeft:15, marginRight:10}}>\n        <Autocomplete\n          \n          fullWidth\n          id=\"combo-box-demo\"\n          \n          options={data.players}\n          getOptionLabel={(option) => `玩家 ${option.id}`}\n          renderOption={(option) => (\n            <React.Fragment>\n              <span\n                style={{\n                  color: option.isEmpty ? \"gray\" : \"lightgreen\",\n                  transition: \"all .3s ease\",\n                  fontSize: \"24px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                &#x25cf;\n              </span>\n              {` 玩家 ${option.id}`}\n            </React.Fragment>\n          )}\n          onChange={(event, newValue) => {\n            setPlayerId(newValue.id);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              color=\"secondary\"\n              label=\"玩家\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              className={classes.margin}\n            />\n          )}\n        />  \n        \n       \n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"密碼\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          onChange={(e) => setPlayerPass(e.target.value)}\n          value={playerPass}\n          color=\"secondary\"\n          autoComplete=\"off\"\n        />\n       \n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            updatePlayerPass({\n              variables: { id: playerId, pass: playerPass },\n            });\n          }}\n        >\n          <Icon path={mdiPaw} />\n        </Button>\n        </div>\n        </div>\n\n      {/*<Box mt={8}>\n        <Copyright />\n        </Box>*/}\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport {\n  useLazyQuery,\n  useQuery,\n  useMutation,\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Footer from \"./Footer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { ReactSVG } from \"react-svg\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\n//import ApolloClient from \"apollo-boost\";\n\nimport God from \"./God\";\nimport Admin from \"./Admin\";\nimport Player from \"./Player\";\n\nimport LoginPage from \"./Login\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport blue from \"@material-ui/core/colors/blue\";\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"/graphql\",\n  }),\n});\n\nconst auth = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"/auth\",\n  }),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      isEmpty\n    }\n    login {\n      id\n      isValid\n    }\n  }\n`;\n\nconst LOG_OFF = gql`\n  mutation Logoff {\n    logoff\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      name\n    }\n  }\n`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n/*\nfunction Login() {\n  const classes = useStyles();\n\n  const [playerId, setPlayerId] = React.useState(-1);\n  const [playerPass, setPlayerPass] = React.useState(\"\");\n  const { loading, error, data } = useQuery(GET_PLAYERS);\n  const [updatePlayerPass, playerStatus] = useMutation(UPDATE_PLAYER_PASS);\n  const [isValidPlayerStatus, setIsValidPlayerStatus] = React.useState(false);\n  if (loading || playerStatus.loading) {\n    return <div>Loading</div>;\n  }\n\n  //if (playerStatus.data)\n\n  if (\n    playerStatus.called &&\n    playerStatus.data.updatePlayerPass.isValid &&\n    isValidPlayerStatus\n  ) {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <AppBar position=\"absolute\">\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                小狼狼\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  setIsValidPlayerStatus(false);\n                }}\n              >\n                退出\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          {\n            <div style={{ marginTop: 100 }}>\n              {playerId === 0 ? (\n                <God\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              ) : (\n                <Player\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              )}\n            </div>\n          }\n\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={{ marginTop: \"20%\" }}>\n        <Avatar round={true} src=\"wolf-login.png\" />\n        <Autocomplete\n          fullWidth\n          id=\"combo-box-demo\"\n          className={classes.margin}\n          options={data.players}\n          getOptionLabel={(option) => `玩家 ${option.id}`}\n          renderOption={(option) => (\n            <React.Fragment>\n              <span\n                style={{\n                  color: option.isEmpty ? \"gray\" : \"lightgreen\",\n                  transition: \"all .3s ease\",\n                  fontSize: \"24px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                &#x25cf;\n              </span>\n              {` 玩家 ${option.id}`}\n            </React.Fragment>\n          )}\n          onChange={(event, newValue) => {\n            setPlayerId(newValue.id);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"玩家\"\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          )}\n        />\n\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"密碼\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          onChange={(e) => setPlayerPass(e.target.value)}\n          value={playerPass}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            updatePlayerPass({\n              variables: { id: playerId, pass: playerPass },\n            });\n            setIsValidPlayerStatus(true);\n          }}\n        >\n          登入\n        </Button>\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n*/\n\nfunction LogoffButton() {\n  const history = useHistory();\n  const [logoff] = useMutation(LOG_OFF, {\n    onCompleted: () => {\n      history.push(\"/\");\n    },\n  });\n\n  return (\n    /* <Button\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={() => {\n        logoff();\n        //setIsValidPlayerStatus(false);\n      }}\n    >\n      退出\n    </Button>*/\n    <IconButton\n      aria-label=\"delete\"\n      size=\"large\"\n      onClick={() => {\n        logoff();\n        //setIsValidPlayerStatus(false);\n      }}\n    >\n      <ExitToAppIcon fontSize=\"large\" />\n    </IconButton>\n  );\n}\n\nfunction Game(props) {\n  const history = useHistory();\n  const [getPlayer, { loading, error, data }] = useLazyQuery(GET_PLAYERS, {\n    fetchPolicy: \"network-only\",\n  });\n\n  const classes = useStyles();\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      getPlayer();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      error.graphQLErrors.forEach((e) => {\n        const { extensions } = e;\n        if (extensions.code === \"UNAUTHENTICATED\") {\n          history.push(\"/\");\n          //setIsLogoff(true);\n        }\n      });\n    }\n  }, [error]);\n\n  if (loading || !data) {\n    return <div>Loading</div>;\n  }\n\n  //const [playerId, setPlayerId] = React.useState(-1);\n  //const [playerPass, setPlayerPass] = React.useState(\"\");\n\n  //const [isLogoff, setIsLogoff] = React.useState(false);\n  /*\n  const { loading, error, data } = useQuery(GET_PLAYERS, {\n    fetchPolicy: \"network-only\",\n  });\n  */\n\n  /*\n  const [logoff, {loading:logoffLoading, data:logoffdata}] = useMutation(LOG_OFF, {\n    onCompleted: () => {\n      console.log('complete')\n      //setIsLogoff(true);\n    },\n  });\n  */\n\n  /*\n  \n  */\n\n  /*\n  React.useEffect(() => {\n    if (!loading && isLogoff && !logoffLoading) {\n      history.push(\"/\");\n    }\n  }, [loading, isLogoff, logoffLoading]);\n  */\n  /*\n  if (loading) {\n    return <div>Loading</div>;\n  }\n  */\n\n  console.log(data, loading);\n\n  const playerId = data.login.id;\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <AppBar position=\"absolute\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            <div\n              style={{\n                width: 70,\n                margin: \"auto\",\n                borderRadius: \"50%\",\n                backgroundColor: \"#D1ECB7\",\n              }}\n            >\n              <div style={{ margin: 2, width: 50 }}>\n                <div style={{ marginLeft: 6, width: 55 }}>\n                  <ReactSVG\n                    src=\"wolf.svg\"\n                    beforeInjection={(svg) => {\n                      svg.setAttribute(\"style\", \"margin-top: 10px\");\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </Typography>\n          <LogoffButton />\n        </Toolbar>\n      </AppBar>\n\n      <div style={{ marginTop: 100 }}>\n        {playerId === 0 ? (\n          <Container maxWidth={playerId === 0 ? \"md\" : \"sm\"}>\n            <God\n              id={playerId}\n              pass={\"\"}\n              name={\"\"}\n              setDarkMode={props.setDarkMode}\n            />\n          </Container>\n        ) : (\n          <Player\n            id={playerId}\n            pass={\"\"}\n            name={\"\"}\n            setDarkMode={props.setDarkMode}\n          />\n        )}\n      </div>\n\n      <Box pt={4}>\n        <Copyright />\n      </Box>\n    </React.Fragment>\n  );\n}\n\n/*\nconst theme = createMuiTheme({\n  \n  palette: {\n    primary: {\n      main: '#82b1ff',\n    },\n    type: 'dark',\n  },\n  \n});\n*/\n\nfunction App() {\n  const [isDarkMode, setDarkMode] = React.useState(false);\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: isDarkMode ? \"dark\" : \"light\",\n          secondary: { main: \"#E66692\" },\n          primary: isDarkMode\n            ? {\n                main: \"#F3BEBD\",\n              }\n            : {\n                main: \"#F3BEBD\",\n              },\n        },\n      }),\n    [isDarkMode]\n  );\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <ApolloProvider client={auth}>\n                <LoginPage />\n              </ApolloProvider>\n            </Route>\n\n            <Route exact path=\"/game\">\n              <ApolloProvider client={client}>\n                <Game setDarkMode={setDarkMode} />\n              </ApolloProvider>\n            </Route>\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}