{"version":3,"sources":["logo.svg","Footer.js","PlayerTable.js","DarkPlayerTable.js","RoleTable.js","AddRole.js","drag/ItemTypes.js","drag/Card.js","drag/Container.js","EditTemplateRole.js","Admin.js","EnabledTemplateInfo.js","God.js","Player.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","footer","backgroundColor","palette","background","paper","padding","spacing","useStyles","margin","table","minWidth","title","flexGrow","menuButton","marginRight","SET_DIE_STATUS","gql","SET_CHIEF_ID","SET_VOTE_WEIGHTED_ID","RESET_CHIEF_CANDIDATE","UPDATE_PASS","FormDialog","props","React","useState","errMsg","setErrorMsg","useMutation","onError","console","log","onCompleted","setOpen","updatePass","open","pass","setPass","handleClose","Button","variant","color","onClick","Dialog","onClose","aria-labelledby","DialogContent","TextField","autoFocus","id","label","type","fullWidth","onChange","event","target","value","helperText","error","DialogActions","size","variables","CollapseSell","setDie","setChiefId","setVoteWeightedId","resetChiefCandidate","row","openDetail","setOpenDetail","Fragment","TableRow","TableCell","IconButton","aria-label","chiefId","chiefVoteState","isCandidate","isDropedOut","Checkbox","e","checked","inputProps","isDie","voteWeightedId","component","scope","align","name","roleName","votedNumber","chiefVote","toString","vote","style","isEmpty","isVoteFinish","transition","fontSize","Collapse","in","timeout","unmountOnExit","Box","textAlign","PlayerTable","classes","TableContainer","Paper","Table","className","TableHead","TableBody","data","map","key","SET_DARK_DIE_STATUS","Set","idSet","setIdSet","display","targets","disabled","newSet","has","delete","add","BaseTable","total","result","forEach","d","number","push","processData","players","v","idx","marginLeft","RoleTable","GET_ROLES","AddRole","roleId","setRoleId","roleNumber","setRoleNumber","useQuery","loading","justifyContent","Autocomplete","options","roles","filter","getOptionLabel","option","width","newValue","renderInput","params","marginTop","Fab","updateRoleNumber","parseInt","border","marginBottom","cursor","Card","text","index","moveCard","ref","useRef","useDrop","accept","ItemTypes","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","Container","cards","setCards","useCallback","dragCard","newCards","update","$splice","onUpdate","card","i","renderCard","GET_TEMPLATE","UPDATE_ROLE_NUMBER","UPDATE_RULE","UPDATE_ROLE_PRIORITY","TabPanel","children","other","role","hidden","p","convertToDragData","EditDarkPriority","priorityList","setPrioritylist","orgPriorityList","setOrgPriorityList","useLazyQuery","fetchPolicy","geTemplate","called","updateRolePriority","useEffect","idData","template","dragData","DndProvider","backend","Backend","ids","EditRole","Typography","gutterBottom","EditRuleCore","setValue","updateRule","description","multiline","rows","EditRule","refetch","EditTemplate","square","Tabs","indicatorColor","textColor","Tab","ADD_TEMPLATE","DELETE_TEMPLATE","ENABLE_TEMPLATE","TemplateControl","onSelect","isEnabled","onEdit","onDelete","TemplateTable","addTemplate","deleteTemplate","setName","enableTemplate","maxWidth","templates","setEditName","Admin","editName","tData","EnabledTemplate","enabledTemplate","UPDATE_PLAYER_NAME","GENERATE_TEMPLATE_ROLE","GENERATE_TEMPLATE_PLAYER","REMOVE_ALL_PLAYER","VOTE_START","VOTE_CHIEF_START","parseData","playerGroup","r","TemplateRoleTable","VoteAction","targetList","setTargetList","hasChief","hasVoteTarget","voteStart","isLock","hasTarget","DialogContentText","isTarget","player","Radio","includes","length","Game","generateRole","generatePlayer","removeAllPlayer","isOpen","setIsOpen","useDebounce","updatePlayerName","isCovertWolfToHuman","state","setState","isPlayerMode","isDark","DialogTitle","fontWeight","FormControlLabel","control","God","history","useHistory","getRole","isMounted","interval","setInterval","clearInterval","graphQLErrors","extensions","code","gameInfo","setDarkMode","elevation","submit","container","paddingTop","paddingBottom","GET_PLAYER_INFO","SUBMIT_VOTE","SUBMIT_CHIEF_CANDIDATE","SET_IS_VOTER","DROP_OUT_CHIEF_CANDIDATE","GET_ENABLED_TEMPLATE","src","span","setTarget","submitVote","isValidCandidate","CandidateChiefDialog","setIsVoter","submitChiefCandidate","dropOutChiefCandidate","PlayerControl","playerInfo","playerCalled","openChiefCandidate","setOpenChiefCandidate","setRoleName","uuid","dataRoleName","setTimeout","root","CardContent","isFlipped","flipDirection","TemplateInfo","Player","GET_PLAYERS","UPDATE_PLAYER_PASS","Icon","viewBox","fill","path","Login","playerId","setPlayerId","playerPass","setPlayerPass","stopPolling","startPolling","mdiPaw","updatePlayerPass","isValid","position","left","transform","renderOption","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","auth","LOG_OFF","Copyright","Date","getFullYear","LogoffButton","logoff","getPlayer","login","CssBaseline","AppBar","Toolbar","edge","pt","App","isDarkMode","useMemo","createMuiTheme","primary","main","ThemeProvider","exact","ApolloProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4b8d521d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 750,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst SET_DIE_STATUS = gql`\n  mutation SetDieStatus($id: Int!) {\n    setDieStatus(id: $id)\n  }\n`;\nconst SET_CHIEF_ID = gql`\n  mutation SetChiefId($id: Int!) {\n    setChiefId(id: $id)\n  }\n`;\n\nconst SET_VOTE_WEIGHTED_ID = gql`\n  mutation SetVoteWeightedId($id: Int!) {\n    setVoteWeightedId(id: $id)\n  }\n`;\n\nconst RESET_CHIEF_CANDIDATE = gql`\n  mutation ResetChiefCandidate($id: Int!) {\n    resetChiefCaniddate(id: $id)\n  }\n`;\n\nconst UPDATE_PASS = gql`\n  mutation UpdatePass($id: Int!, $pass: String!) {\n    updatePass(id: $id, pass: $pass)\n  }\n`;\n\n//voteWeightedId\n\n\n\n\nfunction FormDialog(props) {\n  const [errMsg, setErrorMsg] = React.useState(\"\");\n  const [updatePass] = useMutation(UPDATE_PASS, { onError: () => {\n    setErrorMsg(\"Access Error!\")\n\n    console.log('error')\n  } , onCompleted:()=>{\n    setOpen(false);\n  }});\n  const [open, setOpen] = React.useState(false);\n  const [pass, setPass] = React.useState(\"\");\n  \n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    setPass(event.target.value);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n        color={\"secondary\"}\n        size=\"small\"\n      >\n        Update\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"PWD\"\n            type=\"email\"\n            fullWidth\n            onChange={handleChange}\n            helperText={errMsg}\n            error={errMsg !== \"\"}\n            onClick={()=>{\n              setErrorMsg(\"\");\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" size=\"small\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              updatePass({ variables: { id: props.id, pass } });\n             \n            }}\n            color=\"secondary\"\n            size=\"small\"\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nfunction CollapseSell(props) {\n  const [setDie] = useMutation(SET_DIE_STATUS);\n  const [setChiefId] = useMutation(SET_CHIEF_ID);\n  const [setVoteWeightedId] = useMutation(SET_VOTE_WEIGHTED_ID);\n  const [resetChiefCandidate] = useMutation(RESET_CHIEF_CANDIDATE);\n  const row = props.row;\n  const [openDetail, setOpenDetail] = React.useState(false);\n \n  \n  return (\n    <React.Fragment>\n      \n      <TableRow>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpenDetail(!openDetail)}\n          >\n            {openDetail ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell>\n          {(row.id === 0 ||\n            props.chiefId >= 0 ||\n            (row.chiefVoteState &&\n              row.chiefVoteState.isCandidate &&\n              !row.chiefVoteState.isDropedOut)) && (\n            <Checkbox\n              onChange={(e) => {\n                setChiefId({ variables: { id: row.id } });\n              }}\n              checked={row.id === props.chiefId}\n              color=\"primary\"\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            />\n          )}\n\n          {row.chiefVoteState.type && (\n            <button\n              onClick={() => {\n                resetChiefCandidate({ variables: { id: row.id } });\n              }}\n            >\n              重置 {`(${row.chiefVoteState.type})`}\n            </button>\n          )}\n        </TableCell>\n        <TableCell>\n          {row.id ? (\n            <Checkbox\n              onChange={(e) => {\n                setDie({ variables: { id: row.id } });\n              }}\n              checked={row.isDie}\n              color=\"primary\"\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            />\n          ) : null}\n        </TableCell>\n        <TableCell>\n          <Checkbox\n            onChange={(e) => {\n              //setChiefId({variables:{id:row.id}});\n              setVoteWeightedId({ variables: { id: row.id } });\n            }}\n            checked={row.id === props.voteWeightedId}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n          />\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.id}\n        </TableCell>\n        <TableCell align=\"right\">{row.name}</TableCell>\n        <TableCell align=\"right\">{row.roleName}</TableCell>\n        <TableCell align=\"right\">{row.votedNumber}</TableCell>\n        <TableCell align=\"right\">{row.chiefVote.toString()}</TableCell>\n        <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n        <TableCell align=\"right\">\n          <span\n            style={{\n              color: row.isEmpty\n                ? \"gray\"\n                : row.isVoteFinish\n                ? \"lightgreen\"\n                : \"orange\",\n              transition: \"all .3s ease\",\n              fontSize: \"24px\",\n              marginRight: \"10px\",\n            }}\n          >\n            &#x25cf;\n          </span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <Collapse in={openDetail} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <div style={{ textAlign: \"left\" }}> PWD : {row.pass || \"\"}</div>\n\n            <FormDialog id={row.id} />\n          </Box>\n        </Collapse>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nexport default function PlayerTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>警長</TableCell>\n            <TableCell>死亡</TableCell>\n            <TableCell>放逐加權</TableCell>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"left\">玩家</TableCell>\n            <TableCell align=\"right\">角色</TableCell>\n            <TableCell align=\"right\">投票</TableCell>\n            <TableCell align=\"center\">警長</TableCell>\n            <TableCell align=\"center\">放逐</TableCell>\n            <TableCell align=\"right\">上線</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <CollapseSell {...props} row={row} key={row.id} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 750,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst SET_DARK_DIE_STATUS = gql`\n  mutation SetDarkDieStatus($targets: [Int]!) {\n    setDarkDieStatus(targets: $targets)\n  }\n`;\n\nconst SET_DIE_STATUS = gql`\n  mutation SetDieStatus($id: Int!) {\n    setDieStatus(id: $id)\n  }\n`;\nconst SET_CHIEF_ID = gql`\n  mutation SetChiefId($id: Int!) {\n    setChiefId(id: $id)\n  }\n`;\n\nconst SET_VOTE_WEIGHTED_ID = gql`\nmutation SetVoteWeightedId($id: Int!) {\n  setVoteWeightedId(id: $id)\n}\n`\n\nexport default function PlayerTable(props) {\n  const classes = useStyles();\n\n  const [idSet, setIdSet] = useState(new Set());\n\n  const [setDie] = useMutation(SET_DARK_DIE_STATUS);\n  const [setChiefId] = useMutation(SET_CHIEF_ID);\n  const [setVoteWeightedId] = useMutation(SET_VOTE_WEIGHTED_ID);\n  return (\n    <>\n      <Box display=\"flex\">\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n          setDie({variables:{targets:[...idSet]}});\n        }}>\n          確認死亡\n        </Button>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>警長</TableCell>\n              <TableCell>死亡</TableCell>\n              <TableCell>放逐加權</TableCell>\n              <TableCell>ID</TableCell>\n\n              <TableCell align=\"left\">玩家</TableCell>\n              <TableCell align=\"right\">角色</TableCell>\n              <TableCell align=\"right\">投票</TableCell>\n              <TableCell align=\"center\">警長</TableCell>\n              <TableCell align=\"center\">放逐</TableCell>\n              <TableCell align=\"right\">上線</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.data.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell>\n                  <Checkbox\n                    disabled\n                    onChange={(e) => {\n                      setChiefId({ variables: { id: row.id } });\n                    }}\n                    checked={row.id === props.chiefId}\n                    color=\"primary\"\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  />\n                </TableCell>\n                <TableCell>\n                  {row.id ? (\n                    <Checkbox\n                      onChange={(e) => {\n                        const newSet = new Set(idSet);\n                        if (idSet.has(row.id)) {\n                          newSet.delete(row.id);\n                        } else {\n                          newSet.add(row.id);\n                        }\n\n                        setIdSet(newSet);\n                        //setDie({variables:{id:row.id}});\n                      }}\n                      checked={row.isDie || idSet.has(row.id)}\n                      disabled={row.isDie}\n                      color=\"primary\"\n                      inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                    />\n                  ) : null}\n                </TableCell>\n                <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    //setChiefId({variables:{id:row.id}});\n                    setVoteWeightedId({variables:{id:row.id}});\n                  }}\n                  checked={row.id === props.voteWeightedId}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />\n              </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"right\">{row.name}</TableCell>\n                <TableCell align=\"right\">{row.roleName}</TableCell>\n                <TableCell align=\"right\">{row.votedNumber}</TableCell>\n                <TableCell align=\"right\">{row.chiefVote.toString()}</TableCell>\n                <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n                <TableCell align=\"right\">\n                  <span\n                    style={{\n                      color: row.isEmpty\n                        ? \"gray\"\n                        : row.isVoteFinish\n                        ? \"lightgreen\"\n                        : \"orange\",\n                      transition: \"all .3s ease\",\n                      fontSize: \"24px\",\n                      marginRight: \"10px\",\n                    }}\n                  >\n                    &#x25cf;\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport { useQuery, useMutation , useLazyQuery} from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      number\n    }\n    players {\n      id\n      name\n      roleName\n      isEmpty\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\n//if the number = 0 will not show\n//caculate the total number\nfunction processData(data) {\n  let total = 0;\n\n  const result = [];\n\n  data.forEach((d) => {\n    const { number } = d;\n    if (number) {\n      total += number;\n      result.push(d);\n    }\n  });\n  return { total, data: result };\n}\n\nfunction BaseTable(props) {\n  const classes = useStyles();\n\n \n  \n  const { total, data } = processData(props.data);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>角色</TableCell>\n\n            <TableCell align=\"right\">人數</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <React.Fragment key={row.name}>\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.number}</TableCell>\n              </TableRow>\n              {row.players ? (\n                <TableRow align=\"left\">\n                  {row.players.map((v,idx) => (\n                    <div style={{ fontSize: 22, marginLeft:45 }} key={idx}>{`${v.id} : ${v.name}`}</div>\n                  ))}\n                </TableRow>\n              ) : null}\n           </React.Fragment>\n          ))}\n          <TableRow>\n            <TableCell align=\"right\">總人數</TableCell>\n            <TableCell align=\"right\">{total}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction RoleTable(props) {\n\n  return <BaseTable data={props.data} />;\n\n  /*\n  const { variables, query, pollInterval } = props;\n\n  \n  const [queryData,{ loading, error, data: rawData, called}] = useLazyQuery(query, {\n    //fetchPolicy:\"network-only\",\n    variables,\n    //pollInterval\n  });\n\n\n  let isMounted = true;\n useEffect(() => {\n   if (isMounted) {\n     queryData();\n   }\n\n   const interval = setInterval(() => {\n     if (isMounted) {\n       queryData();\n     }\n   }, 500);\n\n   return () => {\n     clearInterval(interval);\n     isMounted = false;\n   };\n }, []);\n\n  if (!called || !rawData) {\n    return <div>Loading</div>;\n  }\n\n  const data = props.parseData(rawData);\n\n  console.log(data, variables, query, rawData);\n\n  return <BaseTable data={data} />;\n  */\n}\n\nexport { RoleTable, BaseTable };\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\n\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      \n    }\n    \n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function AddRole(props) {\n  const classes = useStyles();\n  const [roleId, setRoleId] = React.useState(-1);\n  const [roleNumber, setRoleNumber] = React.useState(0);\n  const { loading, error, data } = useQuery(GET_ROLES);\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  console.log(data)\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={data.roles.filter((d) => d.id > 0)}\n        getOptionLabel={(option) => option.name}\n        style={{ width: 300 }}\n        onChange={handleRoleChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"角色\"\n            variant=\"outlined\"\n            margin=\"dense\"\n          />\n        )}\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"人數\"\n        variant=\"outlined\"\n        className={classes.margin}\n        margin=\"dense\"\n        type=\"number\"\n        value={roleNumber}\n        onChange={(e) => setRoleNumber(e.target.value)}\n      />\n      <div style={{ marginTop: 5 }}>\n        <Fab\n          size=\"medium\"\n          color=\"secondary\"\n          aria-label=\"add\"\n          size=\"small\"\n          onClick={() => {\n            props.updateRoleNumber({\n              id: roleId,\n              number: parseInt(roleNumber),\n            });\n            /*\n            updateRoleNumber({\n              variables: { id: roleId, number: parseInt(roleNumber) },\n            });\n            */\n          }}\n        >\n          <SaveIcon />\n        </Fab>\n      </div>\n    </div>\n  );\n}\n","export default {\n    CARD: 'card',\n  }","import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move',\n}\nconst Card = ({ id, text, index, moveCard }) => {\n  const ref = useRef(null)\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n  return (\n    <div ref={ref} style={{ ...style, opacity }}>\n      {text}\n    </div>\n  )\n}\nexport default Card","import React, { useState, useCallback } from \"react\";\nimport Card from \"./Card\";\nimport update from \"immutability-helper\";\nconst style = {\n  width: 400,\n};\nconst Container = (props) => {\n  {\n    const [cards, setCards] = useState([...props.data]);\n    const moveCard = useCallback(\n      (dragIndex, hoverIndex) => {\n        const dragCard = cards[dragIndex];\n        const newCards = update(cards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ],\n        });\n        setCards(newCards);\n\n        props.onUpdate(newCards)\n      },\n      [cards]\n    );\n    const renderCard = (card, index) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          moveCard={moveCard}\n        />\n      );\n    };\n    return (\n      <>\n        <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n      </>\n    );\n  }\n};\nexport default Container;\n","import React, { useEffect } from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport AddRole from \"./AddRole\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DragBox from \"../src/drag/Container\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\n\nconst GET_TEMPLATE = gql`\n  query GetTemplate($name: String!) {\n    template(name: $name) {\n      roles {\n        name\n        number\n        id\n      }\n      description\n    }\n  }\n`;\n\nconst UPDATE_ROLE_NUMBER = gql`\n  mutation UpdateTempl($roleId: Int!, $number: Int!, $name: String!) {\n    updateTemplateRole(name: $name, number: $number, roleId: $roleId)\n  }\n`;\n\nconst UPDATE_RULE = gql`\n  mutation UpdateRule($name: String!, $description: String!) {\n    updateTemplateDescription(name: $name, description: $description)\n  }\n`;\n\nconst UPDATE_ROLE_PRIORITY = gql`\n  mutation UpdateRolePriority($name: String!, $ids: [Int]!) {\n    updateTemplateRolePriority(name: $name, ids: $ids)\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst convertToDragData = (data) => {\n  const result = [];\n  data.forEach((d) => {\n    const { name, id } = d;\n    result.push({ id, text: name });\n  });\n  return result;\n};\n\nfunction EditDarkPriority(props) {\n  const { name } = props;\n\n  const [priorityList, setPrioritylist] = React.useState([]);\n  const [orgPriorityList, setOrgPriorityList] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [geTemplate, { loading, error, data, called }] = useLazyQuery(\n    GET_TEMPLATE,\n    { fetchPolicy: \"network-only\" }\n\n    /*\n    onCompleted: (res) => {\n      console.log(\"complete\", res);\n      const idData = convertToDragData(res.template.roles);\n      //setPrioritylist(idData.map((v) => v.id));\n      //setOrgPriorityList(idData.map((v) => v.id));\n    },\n    */\n  );\n\n  console.log(data);\n  const [updateRolePriority, res] = useMutation(UPDATE_ROLE_PRIORITY, {\n    onCompleted: () => {\n      //refetch();\n      console.log(\"update dark\");\n      geTemplate({ variables: { name } });\n    },\n  });\n\n  React.useEffect(() => {\n    geTemplate({ variables: { name } });\n  }, []);\n\n  React.useEffect(() => {\n    if (!loading && called) {\n      const idData = convertToDragData(data.template.roles);\n      setPrioritylist(idData.map((v) => v.id));\n      setOrgPriorityList(idData.map((v) => v.id));\n    }\n  }, [data]);\n\n  if (!called || loading) {\n    return <div>Loading</div>;\n  }\n\n  const dragData = convertToDragData(data.template.roles);\n\n  return (\n    <DndProvider backend={Backend}>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          updateRolePriority({ variables: { name, ids: priorityList } });\n        }}\n        color={\n          orgPriorityList.toString() === priorityList.toString()\n            ? \"primary\"\n            : \"secondary\"\n        }\n      >\n        <SaveIcon />\n      </IconButton>\n      <DragBox\n        data={dragData}\n        onUpdate={(data) => {\n          console.log(\"update view\");\n          setPrioritylist(data.map((v) => v.id));\n        }}\n      />\n    </DndProvider>\n  );\n}\n\nfunction EditRole(props) {\n  const { name, data } = props;\n  const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  React.useEffect(() => {\n    console.log(\"mount\" + name);\n\n    return () => {\n      console.log(\"umount\" + name);\n    };\n  }, []);\n\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>\n        {name}\n      </Typography>\n      <AddRole\n        updateRoleNumber={({ id: roleId, number }) => {\n          console.log(roleId, name);\n          updateRoleNumber({ variables: { roleId, name, number } });\n        }}\n      />\n\n      <RoleTable data={data} />\n\n      {/*<RoleTable\n        data={data}\n        query={GET_TEMPLATE}\n        variables={{ name }}\n        parseData={(d) => {\n            console.log(d)\n          return d.template.roles;\n        }}\n        pollInterval={500}\n      />*/}\n    </div>\n  );\n}\n\nfunction EditRuleCore(props) {\n  const [value, setValue] = React.useState(props.value);\n  return (\n    <div>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          props.updateRule({\n            variables: { description: value, name: props.name },\n          });\n        }}\n        color={value === props.value ? \"primary\" : \"secondary\"}\n      >\n        <SaveIcon />\n      </IconButton>\n      <TextField\n        id=\"outlined-multiline-static\"\n        multiline\n        rows={4}\n        fullWidth\n        value={value}\n        variant=\"outlined\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </div>\n  );\n}\n\nfunction EditRule(props) {\n  const { name } = props;\n\n  const { loading, error, data, refetch } = useQuery(GET_TEMPLATE, {\n    variables: { name },\n  });\n\n  const [updateRule, ruleResult] = useMutation(UPDATE_RULE, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <EditRuleCore\n      value={data.template.description}\n      updateRule={updateRule}\n      name={name}\n    />\n  );\n}\n\nexport default function EditTemplate(props) {\n  const { name, data } = props;\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper square>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n      >\n        <Tab label=\"角色\" />\n        <Tab label=\"規則\" />\n        <Tab label=\"黑夜順序\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <EditRole name={name} data={data} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <EditRule name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <EditDarkPriority name={name} />\n      </TabPanel>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery} from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddRole from \"./AddRole\";\nimport EditTemplateRole from \"./EditTemplateRole\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Box from \"@material-ui/core/Box\";\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst GET_TEMPLATES = gql`\n  {\n    templates {\n      isEnabled\n      name\n    }\n  }\n`;\n\nconst ADD_TEMPLATE = gql`\n  mutation addTemplate($name: String!) {\n    addNewTemplate(name: $name)\n  }\n`;\n\nconst DELETE_TEMPLATE = gql`\n  mutation DeleteTemplate($name: String!) {\n    deleteTemplate(name: $name)\n  }\n`;\n\nconst ENABLE_TEMPLATE = gql`\n  mutation EnableTemplate($name: String!) {\n    enableTemplate(name: $name)\n  }\n`;\n\nfunction TemplateControl(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>選擇</TableCell>\n            <TableCell align=\"left\">遊戲模式</TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>編輯</div>\n            </TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>刪除</div>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      props.onSelect(row.name);\n                    }\n                  }}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  checked={row.isEnabled}\n                />\n              </TableCell>\n              <TableCell align=\"left\">{row.name}</TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    console.log(row.name);\n                    props.onEdit(row.name);\n                  }}\n                  disabled={!row.isEnabled}\n                >\n                  <CreateIcon />\n                </IconButton>\n              </TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    //props.onEdit(row.name);\n                    props.onDelete(row.name);\n                  }}\n                  disabled={row.isEnabled}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction TemplateTable(props) {\n  const classes = useStyles();\n  \n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [name, setName] = React.useState(\"\");\n  const [isBusy, setIsBusy] = React.useState(false);\n\n\n  /*\n  const [getTemplate ,{ loading, error, data, stopPolling, startPolling, called }] = useLazyQuery(\n    GET_TEMPLATES\n  );\n    */\n\n\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n\n      /*\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n      */\n    },\n  });\n\n\n  /*\n  React.useEffect(() => {\n    //startPolling(500); // will be called only once\n    return stopPolling; // just return cleanup function without making new one\n  }, []);\n\n  if (loading ) {\n    return <div>Loading</div>;\n  }\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n  */\n \n\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"模式名稱\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n\n        <div style={{ marginTop: 5 }}>\n          <Fab\n            size=\"medium\"\n            color=\"secondary\"\n            aria-label=\"add\"\n            size=\"small\"\n            onClick={() => {\n              addTemplate({ variables: { name } });\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </div>\n      </div>\n      <Container maxWidth=\"sm\">\n        <TemplateControl\n          data={props.data.templates}\n          onEdit={(name) => {\n            props.setEditName(name);\n          }}\n          onSelect={(name) => {\n            enableTemplate({ variables: { name } });\n            //stopPolling();\n          }}\n          onDelete={(name) => {\n            deleteTemplate({ variables: { name } });\n          }}\n        />\n        </Container>\n    </div>\n  );\n}\n\nexport default function Admin(props) {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"\");\n  const [editName, setEditName] = React.useState(\"\");\n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [isBusy, setIsBusy] = React.useState(false);\n\n  console.log()\n\n  /*\n  const { loading, error, data, stopPolling, startPolling, called } = useQuery(\n    GET_TEMPLATES,\n    {\n      pollInterval: 500,\n      //notifyOnNetworkStatusChange:true\n    }\n  );\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n    },\n  });\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n  */\n\n  if (editName) {\n    return (\n      <div>\n        <Box display=\"flex\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              setEditName(\"\");\n            }}\n          >\n            退出\n          </Button>\n        </Box>\n        <EditTemplateRole name={editName} data={props.data}/>\n      </div>\n    );\n  }\n\n  return (\n    <TemplateTable setEditName={name=>{setEditName(name)}} data={props.tData}/>\n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\n//import RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {BaseTable as BaseRoleTable} from \"./RoleTable\";\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n  }\n`;\n\n\n\nexport default function EnabledTemplate(props) {\n\n  /*\n    const { loading, error, data } = useQuery(GET_ENABLED_TEMPLATE, {\n      fetchPolicy: \"network-only\",\n    });\n  \n    if (loading) {\n      return <div>Loading</div>;\n    }\n  \n   */\n    const { name, description ,roles} = props.data.enabledTemplate;\n\n    \n    return (\n      <div>\n        <Typography variant=\"h2\" gutterBottom>\n          {name}\n        </Typography>\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          rows={6}\n          fullWidth\n          value={description || \"\"}\n          variant=\"outlined\"\n          label=\"規則\"\n          disabled\n          \n        />\n       <BaseRoleTable data={roles}/>\n      </div>\n    );\n  }\n\n\n\n","import React, { useEffect } from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport DarkPlayerTable from \"./DarkPlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nconst GET_ROLES = gql`\n  {\n    templates {\n      isEnabled\n      name\n    }\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n    players {\n      pass\n      isTarget\n      id\n      name\n      roleName\n      vote\n      chiefVote\n      isEmpty\n      isDie\n      isVoteFinish\n      votedNumber\n      chiefVoteState {\n        isDropedOut\n        isCandidate\n        type\n      }\n    }\n    gameInfo(id: 0) {\n      isVoteFinish\n      chiefId\n      isDark\n      voteWeightedId\n      hasVoteTarget\n      hasChief\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst GENERATE_TEMPLATE_ROLE = gql`\n  mutation GenerateTemplateRole($isCovertWolfToHuman: Boolean!) {\n    generateTemplateRole(isCovertWolfToHuman: $isCovertWolfToHuman)\n  }\n`;\n\nconst GENERATE_TEMPLATE_PLAYER = gql`\n  mutation GenerateTemplatePlayer {\n    generateTemplatePlayer\n  }\n`;\n\nconst REMOVE_ALL_PLAYER = gql`\n  mutation RemoveAllPlayer {\n    removeAllPlayer\n  }\n`;\n//enableTemplate(name:\"777\")\n\nconst VOTE_START = gql`\n  mutation VoteStart($targets: [Int]) {\n    voteStart(targets: $targets)\n  }\n`;\n\nconst VOTE_CHIEF_START = gql`\n  mutation VoteChiefStart {\n    voteChiefStart\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst parseData = (data) => {\n  const playerGroup = {};\n\n  data.players.forEach((p) => {\n    const { roleName, name, id } = p;\n    if (playerGroup[roleName]) {\n      playerGroup[roleName].push({ name: name || \"\", id });\n    } else {\n      playerGroup[roleName] = [{ name: name || \"\", id }];\n    }\n  });\n\n  const result = [];\n\n  data.enabledTemplate.roles.forEach((r) => {\n    const { name } = r;\n    result.push({ ...r, players: playerGroup[name] });\n  });\n\n  return result;\n};\n\nfunction TemplateRoleTable(props) {\n  return <RoleTable data={props.data} />;\n\n  /*\n  return (\n    <RoleTable\n\n      query={GET_ENABLED_TEMPLATE}\n      variables={{}}\n      parseData={(data) => {\n        const playerGroup = {};\n\n        data.players.forEach((p) => {\n          const { roleName, name, id } = p;\n          if (playerGroup[roleName]) {\n            playerGroup[roleName].push({ name: name || \"\", id });\n          } else {\n            playerGroup[roleName] = [{ name: name || \"\", id }];\n          }\n        });\n\n        console.log(playerGroup);\n\n        const result = [];\n\n        data.enabledTemplate.roles.forEach((r) => {\n          console.log(\"r\", r);\n\n          const { name } = r;\n          result.push({ ...r, players: playerGroup[name] });\n        });\n\n        console.log(result);\n\n        return result;\n      }}\n      pollInterval={500}\n    />\n  );\n  */\n}\n\nfunction VoteAction(props) {\n  const [targetList, setTargetList] = React.useState([]);\n  const [voteStart] = useMutation(\n    props.hasChief || props.hasVoteTarget ? VOTE_START : VOTE_CHIEF_START,\n    {\n      onCompleted: () => {\n        props.onClose();\n      },\n    }\n  );\n  //const [submitVote, { called }] = useMutation(SUBMIT_VOTE);\n\n  const isLock = props.hasTarget || props.hasChief;\n\n  return (\n    <>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          {`${\n            props.hasChief ? `請選擇放逐的目標` : `請選擇警長候選人`\n          }, 目標必須多於一人, 投票人數也必須多於一人`}\n        </DialogContentText>\n        {props.players\n          .filter((p) => {\n            if (props.hasVoteTarget) {\n              return p.isTarget;\n            } else if (!props.hasChief) {\n              return (\n                p.chiefVoteState.isCandidate && !p.chiefVoteState.isDropedOut\n              );\n            }\n\n            return !p.isDie && p.id !== 0;\n          })\n          .map((player) => (\n            <div key={player.id}>\n              <Radio\n                checked={targetList.includes(player.id)}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  if (\n                    !targetList.includes(player.id) &&\n                    targetList.length + 1 !==\n                      props.players.filter((p) => !p.isDie && p.id !== 0).length\n                  ) {\n                    setTargetList([...targetList, player.id]);\n                  }\n                }}\n              />\n              {` ${player.id} : ${player.name || \"\"}`}\n            </div>\n          ))}\n        <Radio\n          checked={targetList.length === 0}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            if (!isLock) {\n              setTargetList([]);\n            }\n          }}\n        />\n        {`所有人`}\n      </DialogContent>\n      <DialogActions>\n        {(targetList.length === 0 || targetList.length > 1) && (\n          <Button\n            onClick={() => {\n              voteStart({ variables: { targets: targetList } });\n              //submitVote({variables:{id:props.id, target}})\n            }}\n            color=\"primary\"\n          >\n            確認\n          </Button>\n        )}\n      </DialogActions>\n    </>\n  );\n}\n\nfunction Game(props) {\n  const classes = useStyles();\n\n  //const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  const [generateRole] = useMutation(GENERATE_TEMPLATE_ROLE);\n  const [generatePlayer] = useMutation(GENERATE_TEMPLATE_PLAYER);\n  const [removeAllPlayer] = useMutation(REMOVE_ALL_PLAYER);\n  const [voteStart] = useMutation(VOTE_START);\n  //const [roleId, setRoleId] = React.useState(-1);\n  //const [roleNumber, setRoleNumber] = React.useState(0);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name || \"\");\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n  const [state, setState] = React.useState({\n    isCovertWolfToHuman: false,\n  });\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: 0, name: value },\n      });\n    }\n  }, [value]);\n  /*\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n  */\n\n  const hasChief = props.chiefId !== -1;\n\n  if (props.isPlayerMode) {\n    if (props.isDark) {\n      return (\n        <DarkPlayerTable\n          data={props.players}\n          chiefId={props.chiefId}\n          voteWeightedId={props.voteWeightedId}\n        />\n      );\n    }\n\n    return (\n      <>\n        <Dialog\n          aria-labelledby=\"simple-dialog-title\"\n          open={isOpen}\n          onClose={() => {\n            setIsOpen(false);\n          }}\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            {hasChief ? `放逐開始` : `競選警長`}\n          </DialogTitle>\n          <VoteAction\n            players={props.players}\n            onClose={() => {\n              setIsOpen(false);\n            }}\n            hasChief={hasChief}\n            hasVoteTarget={props.hasVoteTarget}\n          />\n        </Dialog>\n        <Box display=\"flex\">\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => {\n              generateRole({\n                variables: { isCovertWolfToHuman: state.isCovertWolfToHuman },\n              });\n            }}\n          >\n            <div style={{ fontWeight: 800 }}>產生角色</div>\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => {\n              removeAllPlayer();\n            }}\n          >\n            <div style={{ fontWeight: 800 }}>刪除玩家</div>\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              //voteStart();\n              setIsOpen(true);\n            }}\n          >\n            {hasChief ? `放逐` : `警長`}\n          </Button>\n        </Box>\n        <Box display=\"flex\">\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.isCovertWolfToHuman}\n                onChange={handleChange}\n                name=\"isCovertWolfToHuman\"\n              />\n            }\n            label=\"轉化狼人變成人類\"\n          />\n        </Box>\n        <Box display=\"flex\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"姓名\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            value={name}\n            onChange={(e) => {\n              setValue(e.target.value);\n              setName(e.target.value);\n            }}\n          />\n        </Box>\n        <PlayerTable\n          data={props.players}\n          chiefId={props.chiefId}\n          voteWeightedId={props.voteWeightedId}\n        />\n      </>\n    );\n  }\n\n  return (\n    <div style={{}}>\n      <Box display=\"flex\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            generatePlayer();\n          }}\n        >\n          加入玩家\n        </Button>\n      </Box>\n\n      <EnabedTemplateInfo data={props.data} />\n    </div>\n  );\n}\n\nexport default function God(props) {\n  const history = useHistory();\n  const [value, setValue] = React.useState(0);\n  const [getRole, { loading, data, error, called }] = useLazyQuery(GET_ROLES, {\n    fetchPolicy: \"network-only\",\n  });\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      getRole();\n    }\n\n    const interval = setInterval(() => {\n      if (isMounted) {\n        getRole();\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (error && !loading) {\n      error.graphQLErrors.forEach((e) => {\n        const { extensions } = e;\n        if (extensions.code === \"UNAUTHENTICATED\") {\n          console.log(\"no access!!!\");\n          history.push(\"/\");\n        }\n      });\n\n      console.log(\"set dark\");\n\n      if (data && data.gameInfo.isDark) {\n        props.setDarkMode(true);\n      }\n    }\n  }, [error, loading, data]);\n\n  React.useEffect(() => {\n    if (data) {\n      props.setDarkMode(data.gameInfo.isDark);\n    }\n  }, [data]);\n\n  if (!called || !data) {\n    return <div>Loading</div>;\n  }\n\n  const { id, pass, name } = props;\n\n  const isPlayerMode = data.players.length > 1 ? true : false;\n  console.log(data);\n  return (\n    <Container maxWidth={isPlayerMode && value === 0 ? \"lg\" : \"sm\"}>\n      <Paper elevation={3}>\n        <Tabs\n          value={value}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n          aria-label=\"disabled tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"遊戲\" />\n          <Tab label={isPlayerMode ? \"黑夜視野\" : \"模式選擇\"} />\n          {isPlayerMode && <Tab label=\"模式\" />}\n        </Tabs>\n        <TabPanel value={value} index={0}>\n          <Game\n            isPlayerMode={isPlayerMode}\n            id={id}\n            pass={pass}\n            name={name}\n            players={data.players}\n            chiefId={data.gameInfo.chiefId}\n            isDark={data.gameInfo.isDark}\n            voteWeightedId={data.gameInfo.voteWeightedId}\n            data={data}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          {isPlayerMode ? (\n            <TemplateRoleTable data={parseData(data)} />\n          ) : (\n            <Admin data={parseData(data)} tData={data} />\n          )}\n        </TabPanel>\n\n        {isPlayerMode && (\n          <TabPanel value={value} index={2}>\n            <EnabedTemplateInfo data={data} />\n          </TabPanel>\n        )}\n      </Paper>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport ReactCardFlip from \"react-card-flip\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Avatar from \"react-avatar\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\n\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\nimport { useHistory } from \"react-router-dom\";\nimport { ReactSVG } from 'react-svg'\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYER_INFO = gql`\n  query GetPlayer($id: Int!, $pass: String!) {\n    player(id: $id, pass: $pass) {\n      id\n      name\n      roleName\n    }\n    players(id: $id) {\n      id\n      name\n      isEmpty\n      revealedRole\n      isDie\n      vote\n      chiefVote\n      isValidCandidate\n      isVoteFinish\n      chiefVoteState {\n        type\n      }\n    }\n   \n    gameInfo(id: $id) {\n      uuid\n      isVoteFinish\n      chiefId\n      isDark\n      chiefVoteState {\n        isDropedOut\n        isCandidate\n        type\n      }\n    }\n    \n  }\n`;\n\nconst SUBMIT_VOTE = gql`\n  mutation SubmitVote($target: Int!) {\n    submitVote(target: $target)\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\n\n\nconst SUBMIT_CHIEF_CANDIDATE = gql`\n  mutation submitChiefCandidate {\n    setIsChiefCandidate\n  }\n`;\n\nconst SET_IS_VOTER = gql`\n  mutation setIsVoter {\n    setIsVoter\n  }\n`;\n\nconst DROP_OUT_CHIEF_CANDIDATE = gql`\n  mutation dropOutChiefCandidate {\n    setIsChiefDropOut\n  }\n`;\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction PlayerTable(props) {\n  const classes = useStyles();\n  console.log(props.data);\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"center\">玩家</TableCell>\n            <TableCell align=\"center\">警長</TableCell>\n            <TableCell align=\"center\">放逐</TableCell>\n            <TableCell align=\"right\">狀態</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id === 0 ? (\n                  <div style={{width:30}}>\n                  <ReactSVG src=\"infinity.svg\" />\n                  </div>\n                ) : row.isDie ? (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    🐾\n                  </span>\n                ) : (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    {row.id}\n                  </span>\n                )}\n                {row.id === props.chiefId && row.id !== 0 && (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    🌟\n                  </span>\n                )}\n                {row.chiefVoteState &&\n                  row.chiefVoteState.type &&\n                  row.chiefVoteState.type == \"chief\" && (\n                    <span\n                      span\n                      aria-label=\"paw\"\n                      style={{ fontSize: 30, marginLeft: 5 }}\n                    >\n                      🗳️\n                    </span>\n                  )}\n                {row.chiefVoteState &&\n                  row.chiefVoteState.type &&\n                  row.chiefVoteState.type == \"drop\" && (\n                    <span\n                      span\n                      aria-label=\"paw\"\n                      style={{ fontSize: 30, marginLeft: 5 }}\n                    >\n                      🚫\n                    </span>\n                  )}\n              </TableCell>\n              <TableCell align=\"center\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.chiefVote.toString()}</TableCell>\n              <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty\n                      ? \"gray\"\n                      : row.isVoteFinish\n                      ? \"lightgreen\"\n                      : \"orange\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\n\n\nfunction VoteAction(props) {\n  const [target, setTarget] = React.useState(-1);\n\n  const [submitVote, { called }] = useMutation(SUBMIT_VOTE);\n\n  return (\n    <>\n      <DialogContent>\n        {props.players\n          .filter((p) => p.isValidCandidate)\n          .map((player) => (\n            <div key={player.id}>\n              <Radio\n                checked={player.id === target}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  setTarget(player.id);\n                }}\n              />\n              {` ${player.id} : ${player.name || \"\"}`}\n            </div>\n          ))}\n        <Radio\n          checked={-1 === target}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            setTarget(-1);\n          }}\n        />\n        {`棄權`}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            submitVote({ variables: { target } });\n          }}\n          color=\"primary\"\n        >\n          確認\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction CandidateChiefDialog(props) {\n\n\n  const [setIsVoter] = useMutation(SET_IS_VOTER, { onCompleted: () => {\n    props.onClose();\n  },})\n\n  const [submitChiefCandidate] = useMutation(SUBMIT_CHIEF_CANDIDATE, {\n    onCompleted: () => {\n      props.onClose();\n    },\n  });\n\n  const [dropOutChiefCandidate] = useMutation(DROP_OUT_CHIEF_CANDIDATE, {\n    onCompleted: () => {\n      props.onClose();\n    },\n  });\n\n  return (\n    <>\n      {props.isCandidate ? (\n        <DialogTitle id=\"form-dialog-title\">是否退水？</DialogTitle>\n      ) : (\n        <DialogTitle id=\"form-dialog-title\">是否競選警長？</DialogTitle>\n      )}\n      <DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              if (props.isCandidate) {\n                dropOutChiefCandidate();\n              } else {\n                submitChiefCandidate();\n              }\n            }}\n            color=\"primary\"\n          >\n            確認\n          </Button>\n          {!props.isCandidate && <Button\n            onClick={() => {\n              setIsVoter();\n            }}\n            style={{color:'DarkOrange'}}\n          >\n            不要!\n          </Button>}\n          <Button\n            onClick={() => {\n              props.onClose();\n            }}\n            color=\"secondary\"\n          >\n            取消\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </>\n  );\n}\n\nfunction PlayerControl(props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [\n    playerInfo,\n    { loading, error, data, called: playerCalled },\n  ] = useLazyQuery(GET_PLAYER_INFO, { fetchPolicy: \"network-only\" });\n\n  const [openChiefCandidate, setOpenChiefCandidate] = React.useState(false);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name);\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      playerInfo({ variables: { id: props.id, pass: props.pass } });\n    }\n\n    const interval = setInterval(() => {\n      if (isMounted) {\n        playerInfo({ variables: { id: props.id, pass: props.pass } });\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: props.id, name: value },\n      });\n    }\n\n    if (error && !loading) {\n      history.push(\"/\");\n    }\n\n    //audioEl.play()\n  }, [value, error, loading]);\n\n  React.useEffect(() => {\n    if (data) {\n      props.setDarkMode(data.gameInfo.isDark);\n    }\n  }, [data]);\n\n  const [roleName, setRoleName] = React.useState(\"\");\n  const uuid = data ? data.gameInfo.uuid : \"\";\n  const dataRoleName = data ? data.player.roleName : \"\";\n  React.useEffect(() => {\n    setRoleName(\"\");\n\n    if (data) {\n      console.log(data);\n      setTimeout(() => {\n        setRoleName(data.player.roleName);\n      }, 1000);\n    }\n\n    return () => {\n      setRoleName(\"\");\n    };\n  }, [uuid, dataRoleName]);\n\n  if (!playerCalled || !data) {\n    return <div>Loading</div>;\n  }\n\n  const hasChief = data.gameInfo.chiefId !== -1;\n  const { id, name: playerName } = data.player;\n  return (\n    <>\n      <Dialog\n        aria-labelledby=\"simple-dialog-title\"\n        open={!data.gameInfo.isVoteFinish}\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {hasChief ? `放逐玩家` : `選擇警長`}\n        </DialogTitle>\n        <VoteAction players={data.players} id={id} />\n      </Dialog>\n\n      {!hasChief && (\n        <Box display=\"flex\">\n          {data.gameInfo.chiefVoteState ? (\n            <>\n              <Dialog\n                aria-labelledby=\"simple-dialog-title\"\n                open={openChiefCandidate}\n              >\n                <CandidateChiefDialog\n                  onClose={() => {\n                    setOpenChiefCandidate(false);\n                  }}\n                  isCandidate={data.gameInfo.chiefVoteState.isCandidate}\n                />\n              </Dialog>\n              {data.gameInfo.chiefVoteState.isCandidate ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setOpenChiefCandidate(true);\n                  }}\n                  disabled={data.gameInfo.chiefVoteState.isDropedOut}\n                >\n                  退水\n                </Button>\n              ) : (\n                <Button\n                  \n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setOpenChiefCandidate(true);\n                  }}\n                  disabled={data.gameInfo.chiefVoteState.type !== null}\n                  style={{ border: '2px solid' , fontWeight:800}}\n                >\n                  \n                  上警\n                  \n                </Button>\n              )}\n            </>\n          ) : null}\n        </Box>\n      )}\n      <Box display=\"flex\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"姓名\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => {\n            setValue(e.target.value);\n            setName(e.target.value);\n          }}\n        />\n      </Box>\n      <Card className={classes.root}>\n        <CardContent>\n          <ReactCardFlip\n            isFlipped={roleName ? true : false}\n            flipDirection=\"vertical\"\n          >\n            <Typography variant=\"h1\" component=\"h1\">\n              {\"❔\"}\n            </Typography>\n            <Typography variant=\"h2\" component=\"h2\">\n              {roleName || \"❔\"}\n            </Typography>\n          </ReactCardFlip>\n        </CardContent>\n      </Card>\n\n      <PlayerTable data={data.players} chiefId={data.gameInfo.chiefId} />\n    </>\n  );\n}\n\nfunction TemplateInfo() {\n  const { loading, error, data } = useQuery(GET_ENABLED_TEMPLATE, {\n    fetchPolicy: \"network-only\",\n  });\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return <EnabedTemplateInfo data={data} />;\n}\n\nexport default function Player(props) {\n  const { id, pass, name } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Container maxWidth={\"sm\"}>\n      <Paper elevation={3}>\n        <Tabs\n          value={value}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={handleChange}\n          aria-label=\"disabled tabs example\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"玩家\" />\n          <Tab label=\"模式\" />\n        </Tabs>\n        <TabPanel value={value} index={0}>\n          <PlayerControl\n            id={id}\n            pass={pass}\n            name={name}\n            setDarkMode={props.setDarkMode}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <TemplateInfo />\n        </TabPanel>\n      </Paper>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { ReactSVG } from 'react-svg'\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"react-avatar\";\nimport { mdiPaw } from \"@mdi/js\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      isEmpty\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      id\n    }\n  }\n`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nfunction Icon(props) {\n  return (\n    <svg viewBox=\"0 0 24 24\" style={{ width: \"1.5rem\", fill: \"white\" }}>\n      <path d={props.path} />\n    </svg>\n  );\n}\n\nexport default function Login() {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [playerId, setPlayerId] = React.useState(-1);\n  const [playerPass, setPlayerPass] = React.useState(\"\");\n  const [isValid, setIsValid] = React.useState(false);\n  const { loading, error, data, stopPolling, startPolling } = useQuery(\n    GET_PLAYERS,\n    {\n      //pollInterval: 500,\n      //fetchPolicy: \"network-only\",\n    }\n  );\n  console.log(mdiPaw);\n  const [\n    updatePlayerPass,\n    { loading: passLoading, data: passData },\n  ] = useMutation(UPDATE_PLAYER_PASS, {\n    onCompleted: (data) => {\n      if (data.updatePlayerPass.isValid) {\n        history.push(\"/game\");\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    startPolling(500);\n\n    return () => {\n      stopPolling();\n    };\n  }, []);\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <Container component=\"main\">\n      <div style={{ width: 350, position:'fixed', top:'50%', left:'50%', transform:\"translate(-50%, -50%)\" }}>\n        <Avatar src=\"test-3.png\" size=\"350\" />\n        <Autocomplete\n          fullWidth\n          id=\"combo-box-demo\"\n          className={classes.margin}\n          options={data.players}\n          getOptionLabel={(option) => `玩家 ${option.id}`}\n          renderOption={(option) => (\n            <React.Fragment>\n              <span\n                style={{\n                  color: option.isEmpty ? \"gray\" : \"lightgreen\",\n                  transition: \"all .3s ease\",\n                  fontSize: \"24px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                &#x25cf;\n              </span>\n              {` 玩家 ${option.id}`}\n            </React.Fragment>\n          )}\n          onChange={(event, newValue) => {\n            setPlayerId(newValue.id);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"玩家\"\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          )}\n        />\n\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"密碼\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          onChange={(e) => setPlayerPass(e.target.value)}\n          value={playerPass}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            updatePlayerPass({\n              variables: { id: playerId, pass: playerPass },\n            });\n          }}\n        >\n          <Icon path={mdiPaw} />\n        </Button>\n      </div>\n\n      {/*<Box mt={8}>\n        <Copyright />\n        </Box>*/}\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport {\n  useLazyQuery,\n  useQuery,\n  useMutation,\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Footer from \"./Footer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from \"react-avatar\";\nimport { ReactSVG } from 'react-svg'\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\n//import ApolloClient from \"apollo-boost\";\n\nimport God from \"./God\";\nimport Admin from \"./Admin\";\nimport Player from \"./Player\";\n\nimport LoginPage from \"./Login\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport blue from '@material-ui/core/colors/blue';\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"/graphql\",\n  }),\n});\n\nconst auth = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"/auth\",\n  }),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      isEmpty\n    }\n    login {\n      id\n      isValid\n    }\n  }\n`;\n\nconst LOG_OFF = gql`\n  mutation Logoff {\n    logoff\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      name\n    }\n  }\n`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n/*\nfunction Login() {\n  const classes = useStyles();\n\n  const [playerId, setPlayerId] = React.useState(-1);\n  const [playerPass, setPlayerPass] = React.useState(\"\");\n  const { loading, error, data } = useQuery(GET_PLAYERS);\n  const [updatePlayerPass, playerStatus] = useMutation(UPDATE_PLAYER_PASS);\n  const [isValidPlayerStatus, setIsValidPlayerStatus] = React.useState(false);\n  if (loading || playerStatus.loading) {\n    return <div>Loading</div>;\n  }\n\n  //if (playerStatus.data)\n\n  if (\n    playerStatus.called &&\n    playerStatus.data.updatePlayerPass.isValid &&\n    isValidPlayerStatus\n  ) {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <AppBar position=\"absolute\">\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                小狼狼\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  setIsValidPlayerStatus(false);\n                }}\n              >\n                退出\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          {\n            <div style={{ marginTop: 100 }}>\n              {playerId === 0 ? (\n                <God\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              ) : (\n                <Player\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              )}\n            </div>\n          }\n\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={{ marginTop: \"20%\" }}>\n        <Avatar round={true} src=\"wolf-login.png\" />\n        <Autocomplete\n          fullWidth\n          id=\"combo-box-demo\"\n          className={classes.margin}\n          options={data.players}\n          getOptionLabel={(option) => `玩家 ${option.id}`}\n          renderOption={(option) => (\n            <React.Fragment>\n              <span\n                style={{\n                  color: option.isEmpty ? \"gray\" : \"lightgreen\",\n                  transition: \"all .3s ease\",\n                  fontSize: \"24px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                &#x25cf;\n              </span>\n              {` 玩家 ${option.id}`}\n            </React.Fragment>\n          )}\n          onChange={(event, newValue) => {\n            setPlayerId(newValue.id);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"玩家\"\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          )}\n        />\n\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"密碼\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          onChange={(e) => setPlayerPass(e.target.value)}\n          value={playerPass}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            updatePlayerPass({\n              variables: { id: playerId, pass: playerPass },\n            });\n            setIsValidPlayerStatus(true);\n          }}\n        >\n          登入\n        </Button>\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n*/\n\nfunction LogoffButton() {\n  const history = useHistory();\n  const [logoff] = useMutation(LOG_OFF, {\n    onCompleted: () => {\n      history.push(\"/\");\n    },\n  });\n\n  return (\n    <Button\n      variant=\"outlined\"\n      color=\"secondary\"\n      onClick={() => {\n        logoff();\n        //setIsValidPlayerStatus(false);\n      }}\n    >\n      退出\n    </Button>\n  );\n}\n\nfunction Game(props) {\n  const history = useHistory();\n  const [getPlayer, { loading, error, data }] = useLazyQuery(GET_PLAYERS, {\n    fetchPolicy: \"network-only\",\n  });\n\n  const classes = useStyles();\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      getPlayer();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      error.graphQLErrors.forEach((e) => {\n        const { extensions } = e;\n        if (extensions.code === \"UNAUTHENTICATED\") {\n          history.push(\"/\")\n          //setIsLogoff(true);\n        }\n      });\n    }\n  }, [error]);\n\n  if (loading || !data) {\n    return <div>Loading</div>;\n  }\n\n  //const [playerId, setPlayerId] = React.useState(-1);\n  //const [playerPass, setPlayerPass] = React.useState(\"\");\n\n  //const [isLogoff, setIsLogoff] = React.useState(false);\n  /*\n  const { loading, error, data } = useQuery(GET_PLAYERS, {\n    fetchPolicy: \"network-only\",\n  });\n  */\n\n  /*\n  const [logoff, {loading:logoffLoading, data:logoffdata}] = useMutation(LOG_OFF, {\n    onCompleted: () => {\n      console.log('complete')\n      //setIsLogoff(true);\n    },\n  });\n  */\n\n  /*\n  \n  */\n\n  /*\n  React.useEffect(() => {\n    if (!loading && isLogoff && !logoffLoading) {\n      history.push(\"/\");\n    }\n  }, [loading, isLogoff, logoffLoading]);\n  */\n  /*\n  if (loading) {\n    return <div>Loading</div>;\n  }\n  */\n\n  console.log(data, loading)\n\n  const playerId = data.login.id;\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      \n        <AppBar position=\"absolute\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              <div style={{width:50, margin:'auto', marginTop:10}}>\n            <ReactSVG src=\"wolf.svg\" />\n            </div>\n            </Typography>\n            <LogoffButton />\n          </Toolbar>\n        </AppBar>\n\n        <div style={{ marginTop: 100 }}>\n          {playerId === 0 ? (\n            <Container maxWidth={playerId === 0 ? \"md\" : \"sm\"}>\n            <God id={playerId} pass={\"\"} name={\"\"} setDarkMode={props.setDarkMode} />\n            </Container>\n          ) : (\n           \n            <Player id={playerId} pass={\"\"} name={\"\"} setDarkMode={props.setDarkMode}/>\n            \n          )}\n        </div>\n\n        <Box pt={4}>\n          <Copyright />\n        </Box>\n     \n    </React.Fragment>\n  );\n}\n\n/*\nconst theme = createMuiTheme({\n  \n  palette: {\n    primary: {\n      main: '#82b1ff',\n    },\n    type: 'dark',\n  },\n  \n});\n*/\n\nfunction App() {\n\n\n  const [isDarkMode, setDarkMode] = React.useState(false);\n\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: isDarkMode ? 'dark' : 'light',\n          primary: isDarkMode ? {\n            main: '#F8A9A0',\n          }:{\n            main: '#F8A9A0',\n          },\n        },\n       \n      }),\n    [isDarkMode],\n  );\n\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <ApolloProvider client={auth}>\n              <LoginPage />\n            </ApolloProvider>\n          </Route>\n\n          <Route exact path=\"/game\">\n            <ApolloProvider client={client}>\n              <Game setDarkMode={setDarkMode}/>\n            </ApolloProvider>\n          </Route>\n        </Switch>\n      </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}